{"version":3,"sources":["danganguanli/meteread.js"],"names":["layui","config","base","extend","index","use","$","form","table","layer","utils","tree","ztree","jquery_ztree_excheck","villageTypes","common","on","data","field","console","log","reload","where","render","elem","url","setter","revenueUrl","parseData","request","Method","Data.CompanyCoding","cols","title","templet","d","CompanyName","consts","minWidth","Address","width","StatusName","parseInt","Status","util","toDateString","CreateDate","align","fixed","toolbar","loading","page","limit","text","none","obj","event","msg","confirm","icon","Id","delVillage","Data","closeAll","active","edit","type","haveArray","JSON","stringify","getVillageType","Data.AreaType","res","IsSucceed","Result","errorMessage","Errors","Message","err","params","contentType","export","create","content","param","open","maxmin","area","btn","yes","layero","iframeWindow","window","submitID","submit","find","contents","Idd","close","trigger","btn2","cancel","parseParams","parse","passFields","delete","this","call"],"mappings":"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","file":"../../../danganguanli/meteread.js","sourcesContent":["layui\r\n  .config({\r\n    base: \"../../../layuiadmin/\" //静态资源所在路径\r\n  })\r\n  .extend({\r\n    index: \"lib/index\" //主入口模块\r\n  })\r\n  .use(\r\n    [\r\n      \"index\",\r\n      \"table\",\r\n      \"layer\",\r\n      \"tree\",\r\n      \"jquery_ztree_excheck\",\r\n      \"utils\",\r\n      \"common\",\r\n      \"consts\"\r\n    ],\r\n    function() {\r\n      var $ = layui.$,\r\n        form = layui.form,\r\n        table = layui.table,\r\n        layer = layui.layer,\r\n        tree = layui.tree,\r\n        ztree = layui.ztree,\r\n        jquery_ztree = layui.jquery_ztree_excheck,\r\n        utils = layui.utils,\r\n        common = layui.common,\r\n        villageTypes = []; // 所属小区\r\n\r\n      // utils.test();\r\n\r\n      //z-tree\r\n      // var z_tree = {\r\n      //   init: function(treeData, el) {\r\n      //     // this.render.renderTree(treeData, el);\r\n      //   },\r\n      //   baseData: {\r\n      //     zTreeObj: {}\r\n      //   },\r\n      //   treeSeting: {\r\n      //     check: {\r\n      //       enable: true,\r\n      //       chkboxType: { Y: \"s\", N: \"ps\" }\r\n      //     },\r\n      //     data: {\r\n      //       simpleData: {\r\n      //         enable: true\r\n      //       }\r\n      //     },\r\n      //     callback: {\r\n      //       onCheck: function(e, treeId, treeNode) {\r\n      //         console.log(treeNode, \"areafiles onCheck callback\");\r\n      //       },\r\n      //       onClick: function(e, treeId, treeNode) {\r\n      //         console.log(treeNode, \"areafiles onClick callback\");\r\n      //         console.log(this.getZTreeObj(\"treeArea\").getNodes());\r\n      //       }\r\n      //     }\r\n      //   },\r\n      //   event: {},\r\n      //   render: {\r\n      //     // renderTree: function(treeData, el) {\r\n      //     //   console.log($(\"#\" + el), treeData, \"DOM节点\");\r\n      //     //   z_tree.baseData.zTreeObj = layui.jquery_ztree.init(\r\n      //     //     $(\"#\" + el),\r\n      //     //     z_tree.treeSeting,\r\n      //     //     treeData\r\n      //     //   );\r\n      //     //   var treeObj = layui.jquery_ztree.getZTreeObj(el);\r\n      //     //   var nodes = treeObj.getNodes();\r\n      //     //   if (nodes.length > 0) {\r\n      //     //     //自动展开第一项\r\n      //     //     treeObj.expandNode(nodes[0], true, false, true);\r\n      //     //   }\r\n      //     // }\r\n      //   }\r\n      // };\r\n\r\n      // Test 树形菜单\r\n      // areaTreeNode = [\r\n      //   {\r\n      //     name: \"父节点1\",\r\n      //     children: [{ name: \"子节点1\" }, { name: \"子节点2\" }]\r\n      //   }\r\n      // ];\r\n      // z_tree.init(areaTreeNode, \"treeArea\");\r\n\r\n      //监听搜索\r\n      form.on(\"submit(Handler-search)\", function(data) {\r\n        var field = data.field;\r\n        console.log(data, \"数据\");\r\n\r\n        //执行重载\r\n        table.reload(\"metereadTable\", {\r\n          where: field\r\n        });\r\n      });\r\n\r\n      // 表格渲染\r\n      var metereadTable = table.render({\r\n        elem: \"#metereadTable\",\r\n        url: layui.setter.revenueUrl + \"/api/ReadingPoint/query/list\", //接口\r\n        parseData: layui.setter.parseData,\r\n        request: layui.setter.request,\r\n        where: {\r\n          Method: \"list\",\r\n          \"Data.CompanyCoding\": \"string\"\r\n        }, // 传递给接口的参数\r\n        // request: { CompanyCoding: \"string\" }, // 传递给请求头\r\n        cols: [\r\n          [\r\n            {\r\n              title: \"所属公司\",\r\n              templet: function(d) {\r\n                return d.CompanyName || layui.consts[\"DATA_NULL\"];\r\n              }\r\n            },\r\n            {\r\n              title: \"所属区域-小区\",\r\n              templet: function(d) {\r\n                return d[\"Area_Id_VillageName\"] || layui.consts[\"DATA_NULL\"];\r\n              }\r\n            },\r\n            {\r\n              field: \"Coding\",\r\n              title: \"编号\"\r\n            },\r\n            {\r\n              field: \"Name\",\r\n              title: \"名称\"\r\n            },\r\n            {\r\n              field: \"Address\",\r\n              title: \"详细地址\",\r\n              minWidth: 300,\r\n              templet: function(d) {\r\n                return d.Address || layui.consts[\"DATA_NULL\"];\r\n              }\r\n            },\r\n            {\r\n              title: \"状态\",\r\n              width: 100,\r\n              templet: function(d) {\r\n                return (\r\n                  d.StatusName ||\r\n                  (parseInt(d.Status, 10) === 0\r\n                    ? layui.consts[\"STATUS_ACTIVE\"]\r\n                    : layui.consts[\"STATUS_BLOCK\"])\r\n                );\r\n              }\r\n            },\r\n            {\r\n              title: \"创建时间\",\r\n              width: 200,\r\n              templet: function(d) {\r\n                // console.log(d, \"创建时间\");\r\n                return (\r\n                  \"<div>\" + layui.util.toDateString(d.CreateDate) + \"</div>\"\r\n                );\r\n              }\r\n            },\r\n            {\r\n              title: \"操作\",\r\n              width: 150,\r\n              align: \"center\",\r\n              fixed: \"right\",\r\n              toolbar: \"#table-Handler\"\r\n            }\r\n          ]\r\n        ],\r\n        loading: true,\r\n        page: true,\r\n        limit: 10,\r\n        text: {\r\n          none: layui.consts[\"DATA_NO\"] //默认：无数据。注：该属性为 layui 2.2.5 开始新增\r\n        }\r\n      });\r\n\r\n      //监听工具条\r\n      table.on(\"tool(table-Handler)\", function(obj) {\r\n        console.log(obj.event, \"obj 监听工具条\");\r\n        // 删除\r\n        if (obj.event === \"delete\") {\r\n          var msg = \"是否确认删除？\";\r\n          layer.confirm(msg, { icon: 3, title: \"删除提示\" }, function(index) {\r\n            console.log(obj.data.Id, \"待删除的ID\");\r\n\r\n            request.delVillage({\r\n              // Sign: \"string\",\r\n              Method: \"remove\",\r\n              // Timestamp: 0,\r\n              Data: { Id: obj.data.Id }\r\n            });\r\n            layer.closeAll(); // 关闭所有弹窗\r\n          });\r\n        }\r\n\r\n        // 编辑\r\n        if (obj.event === \"edit\") {\r\n          active.edit({\r\n            type: obj.event,\r\n            haveArray: true,\r\n            villageTypes: JSON.stringify(villageTypes),\r\n            data: JSON.stringify([obj.data])\r\n          });\r\n        }\r\n      });\r\n      //服务交互\r\n      var request = {\r\n        // getArea(params) {\r\n        // console.log(\"调用接口: /api/Area/query/all\");\r\n        // utils.request(\r\n        //   \"/api/Area/query/all\",\r\n        //   params,\r\n        //   \"GET\",\r\n        //   function(res) {\r\n        //     // console.log(res, \"res\");\r\n        //     if (res.IsSucceed) {\r\n        //       var data = res.Result;\r\n        //       // console.log(data, \"获取的接口数据\");\r\n        //       // 区域树形菜单\r\n        //       // 获取一级菜单\r\n        //       var firstMenu = utils.getFirstMenu(data);\r\n        //       var areaMenu = utils\r\n        //         .getMenus(firstMenu, data)\r\n        //         .map(function(current) {\r\n        //           console.log(current, \"current\");\r\n        //           return {\r\n        //             // ...current,\r\n        //             name: current.Name\r\n        //           };\r\n        //         });\r\n        //       // console.log(areaMenu, \"areaMenu\");\r\n        //       // 初始化树形菜单\r\n        //       z_tree.init(areaMenu, \"treeArea\");\r\n        //     } else {\r\n        //       layer.msg(\"获取区域数据失败\", {\r\n        //         icon: 5\r\n        //       });\r\n        //     }\r\n        //   },\r\n        //   function(err) {\r\n        //     console.log(err, \"err\");\r\n        //   }\r\n        // );\r\n        // },\r\n        getVillageType() {\r\n          // 获取所属小区\r\n          utils.request(\r\n            \"/api/Area/query/all\",\r\n            { Method: \"all\", \"Data.AreaType\": 3 },\r\n            \"GET\",\r\n            function(res) {\r\n              console.log(res, \"res\");\r\n              if (res.IsSucceed) {\r\n                villageTypes = res.Result;\r\n              } else {\r\n                var errorMessage = res.Errors[0].Message;\r\n                layer.msg(errorMessage, {\r\n                  icon: 5\r\n                });\r\n              }\r\n            },\r\n            function(err) {\r\n              console.log(err, \"err\");\r\n            }\r\n          );\r\n        },\r\n        // 删除所属小区\r\n        delVillage(params) {\r\n          console.log(params, \"调用接口: /api/Area/remove\");\r\n          utils.request(\r\n            \"/api/ReadingPoint/remove\",\r\n            params,\r\n            \"DELETE\",\r\n            function(res) {\r\n              // console.log(res, \"res\");\r\n              if (res.IsSucceed) {\r\n                // 重载表格\r\n                table.reload(\"metereadTable\");\r\n\r\n                layer.msg(\"删除成功\", {\r\n                  icon: 1\r\n                });\r\n              } else {\r\n                layer.msg(\"删除失败\", {\r\n                  icon: 5\r\n                });\r\n              }\r\n            },\r\n            function(err) {\r\n              console.log(err, \"err\");\r\n            },\r\n            {\r\n              contentType: \"application/json\"\r\n            }\r\n          );\r\n        }\r\n      };\r\n      // 获取树形菜单数据\r\n      // request.getArea({ CompanyCoding: \"string\" });\r\n\r\n      //事件\r\n      var active = {\r\n        export: function() {\r\n          console.log(\"导出数据\");\r\n        },\r\n        create: function(params) {\r\n          var content = \"../tpl/from/meteReadForm.html?\" + $.param(params);\r\n\r\n          layer.open({\r\n            type: 2,\r\n            title: \"新增抄表点档案\",\r\n            content,\r\n            maxmin: true,\r\n            area: [\"700px\", \"400px\"],\r\n            btn: [\"确定\", \"取消\"],\r\n            yes: function(index, layero) {\r\n              console.log(\"点击确定\");\r\n              var iframeWindow = window[\"layui-layer-iframe\" + index],\r\n                submitID = \"LAY-area-files-submit\",\r\n                submit = layero\r\n                  .find(\"iframe\")\r\n                  .contents()\r\n                  .find(\"#\" + submitID);\r\n              //监听提交\r\n              iframeWindow.layui.form.on(\"submit(\" + submitID + \")\", function(\r\n                data\r\n              ) {\r\n                var field = data.field; //获取提交的字段\r\n                var params = { Method: \"insert\", Data: field };\r\n                // 获取 Guid\r\n                utils.request(\r\n                  \"/api/Common/GetInsertGuid\",\r\n                  {},\r\n                  \"GET\",\r\n                  function(res) {\r\n                    console.log(res, \"获取 Guid res\");\r\n                    if (res.IsSucceed) {\r\n                      // 获取到的Guid赋值给params\r\n                      params.Data.Idd = res.Result;\r\n                      console.log(\"新增所属小区参数: params\", params);\r\n                      // 新增所属小区\r\n                      utils.request(\r\n                        \"/api/ReadingPoint/insert\",\r\n                        params,\r\n                        \"POST\",\r\n                        function(res) {\r\n                          // console.log(res, \"res\");\r\n                          if (res.IsSucceed) {\r\n                            // 重载表格\r\n                            table.reload(\"metereadTable\");\r\n\r\n                            layer.msg(\"新增成功\", {\r\n                              icon: 1\r\n                            });\r\n                          } else {\r\n                            var errorMessage = res.Errors[0].Message;\r\n                            layer.msg(errorMessage, {\r\n                              icon: 5\r\n                            });\r\n                          }\r\n                        },\r\n                        function(err) {\r\n                          console.log(err, \"err\");\r\n                        },\r\n                        {\r\n                          contentType: \"application/json\"\r\n                        }\r\n                      );\r\n                    } else {\r\n                      layer.msg(\"获取Guid失败\", {\r\n                        icon: 5\r\n                      });\r\n                    }\r\n                  },\r\n                  function(err) {\r\n                    console.log(err, \"获取 Guid err\");\r\n                  }\r\n                );\r\n\r\n                layer.close(index); //关闭弹层\r\n              });\r\n              submit.trigger(\"click\");\r\n            },\r\n            btn2: function() {\r\n              console.log(\"点击取消\");\r\n            },\r\n            cancel: function() {\r\n              console.log(\"点击取消\");\r\n            }\r\n          });\r\n        },\r\n        edit: function(params) {\r\n          console.log(\"编辑\");\r\n\r\n          var content = \"../tpl/from/meteReadForm.html?\" + $.param(params);\r\n          // console.log(content, \"content\");\r\n          layer.open({\r\n            type: 2,\r\n            title: \"编辑抄表点档案\",\r\n            content,\r\n            maxmin: true,\r\n            area: [\"700px\", \"400px\"],\r\n            btn: [\"确定\", \"取消\"],\r\n            yes: function(index, layero) {\r\n              console.log(\"点击确定\");\r\n              var iframeWindow = window[\"layui-layer-iframe\" + index],\r\n                submitID = \"LAY-area-files-submit\",\r\n                submit = layero\r\n                  .find(\"iframe\")\r\n                  .contents()\r\n                  .find(\"#\" + submitID);\r\n              //监听提交\r\n              iframeWindow.layui.form.on(\"submit(\" + submitID + \")\", function(\r\n                data\r\n              ) {\r\n                var parseParams = JSON.parse(params.data)[0];\r\n                var field = $.extend({}, data.field, { Id: parseParams.Id }); //获取提交的字段\r\n                var passFields = { Method: \"update\", Data: field };\r\n                console.log(passFields, \"passFields\");\r\n\r\n                // 修改所属小区\r\n                utils.request(\r\n                  \"/api/ReadingPoint/update\",\r\n                  passFields,\r\n                  \"PUT\",\r\n                  function(res) {\r\n                    // console.log(res, \"res\");\r\n                    if (res.IsSucceed) {\r\n                      // 重载表格\r\n                      table.reload(\"metereadTable\");\r\n\r\n                      layer.msg(\"修改成功\", {\r\n                        icon: 1\r\n                      });\r\n                    } else {\r\n                      var errorMessage = res.Errors[0].Message;\r\n                      layer.msg(errorMessage, {\r\n                        icon: 5\r\n                      });\r\n                    }\r\n                  },\r\n                  function(err) {\r\n                    console.log(err, \"err\");\r\n                  },\r\n                  {\r\n                    contentType: \"application/json\"\r\n                  }\r\n                );\r\n\r\n                layer.close(index); //关闭弹层\r\n              });\r\n              submit.trigger(\"click\");\r\n            },\r\n            btn2: function() {\r\n              console.log(\"点击取消\");\r\n            },\r\n            cancel: function() {\r\n              console.log(\"点击取消\");\r\n            }\r\n          });\r\n        },\r\n        delete: function() {\r\n          console.log(\"删除\");\r\n        }\r\n      };\r\n\r\n      //按钮操作\r\n      $(\".layui-btn\").on(\"click\", function() {\r\n        var type = $(this).data(\"type\");\r\n        active[type]\r\n          ? active[type].call(this, {\r\n              type,\r\n              haveArray: true,\r\n              villageTypes: JSON.stringify(villageTypes),\r\n              data: []\r\n            })\r\n          : \"\";\r\n      });\r\n\r\n      // 获取所属小区\r\n      request.getVillageType();\r\n    }\r\n  );\r\n"]}