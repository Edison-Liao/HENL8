{"version":3,"sources":["danganguanli/areafiles.js"],"names":["layui","config","base","extend","index","use","$","form","table","layer","utils","tree","ztree","jquery_ztree_excheck","areaTypes","common","on","data","field","console","log","reload","where","render","elem","url","setter","revenueUrl","parseData","request","Method","Data.CompanyCoding","cols","title","templet","d","Me","CompanyName","minWidth","Name","Coding","width","parseInt","Status","consts","util","toDateString","CreateDate","align","fixed","toolbar","loading","page","limit","text","none","obj","event","active","Tip","Data","Id","edit","type","haveArray","JSON","stringify","getAreaType","res","IsSucceed","Result","errorMessage","Errors","Message","msg","icon","err","insertArea","params","contentType","addArea","Idd","editArea","delArea","export","create","content","param","open","maxmin","area","btn","yes","layero","iframeWindow","window","submitID","submit","find","contents","close","trigger","btn2","cancel","parseParams","parse","passFields","delete","confirm","this","call"],"mappings":"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","file":"../../../danganguanli/areafiles.js","sourcesContent":["layui\r\n  .config({\r\n    base: \"../../../layuiadmin/\" //静态资源所在路径\r\n  })\r\n  .extend({\r\n    index: \"lib/index\" //主入口模块\r\n  })\r\n  .use(\r\n    [\r\n      \"index\",\r\n      \"table\",\r\n      \"layer\",\r\n      \"tree\",\r\n      \"jquery_ztree_excheck\",\r\n      \"utils\",\r\n      \"common\",\r\n      \"consts\"\r\n    ],\r\n    function() {\r\n      var $ = layui.$,\r\n        form = layui.form,\r\n        table = layui.table,\r\n        layer = layui.layer,\r\n        tree = layui.tree,\r\n        ztree = layui.ztree,\r\n        jquery_ztree = layui.jquery_ztree_excheck,\r\n        utils = layui.utils,\r\n        common = layui.common,\r\n        areaTypes = []; // 任务类型\r\n\r\n      //z-tree\r\n      // var z_tree = {\r\n      //   init: function(treeData, el) {\r\n      //     // this.render.renderTree(treeData, el);\r\n      //   },\r\n      //   baseData: {\r\n      //     zTreeObj: {}\r\n      //   },\r\n      //   treeSeting: {\r\n      //     check: {\r\n      //       enable: true,\r\n      //       chkboxType: { Y: \"s\", N: \"ps\" }\r\n      //     },\r\n      //     data: {\r\n      //       simpleData: {\r\n      //         enable: true\r\n      //       }\r\n      //     },\r\n      //     callback: {\r\n      //       onCheck: function(e, treeId, treeNode) {\r\n      //         console.log(treeNode, \"areafiles onCheck callback\");\r\n      //       },\r\n      //       onClick: function(e, treeId, treeNode) {\r\n      //         console.log(treeNode, \"areafiles onClick callback\");\r\n      //         console.log(this.getZTreeObj(\"treeArea\").getNodes());\r\n      //       }\r\n      //     }\r\n      //   },\r\n      //   event: {},\r\n      //   render: {\r\n      //     // renderTree: function(treeData, el) {\r\n      //     //   console.log($(\"#\" + el), treeData, \"DOM节点\");\r\n      //     //   z_tree.baseData.zTreeObj = layui.jquery_ztree.init(\r\n      //     //     $(\"#\" + el),\r\n      //     //     z_tree.treeSeting,\r\n      //     //     treeData\r\n      //     //   );\r\n      //     //   var treeObj = layui.jquery_ztree.getZTreeObj(el);\r\n      //     //   var nodes = treeObj.getNodes();\r\n      //     //   if (nodes.length > 0) {\r\n      //     //     //自动展开第一项\r\n      //     //     treeObj.expandNode(nodes[0], true, false, true);\r\n      //     //   }\r\n      //     // }\r\n      //   }\r\n      // };\r\n\r\n      // Test 树形菜单\r\n      // areaTreeNode = [\r\n      //   {\r\n      //     name: \"父节点1\",\r\n      //     children: [{ name: \"子节点1\" }, { name: \"子节点2\" }]\r\n      //   }\r\n      // ];\r\n      // z_tree.init(areaTreeNode, \"treeArea\");\r\n\r\n      //监听搜索\r\n      form.on(\"submit(Handler-search)\", function(data) {\r\n        var field = data.field;\r\n        console.log(data, \"数据\");\r\n\r\n        //执行重载\r\n        table.reload(\"areaFilesTable\", {\r\n          where: field\r\n        });\r\n      });\r\n\r\n      // 表格渲染\r\n      var areaFilesTable = table.render({\r\n        elem: \"#areaFilesTable\",\r\n        url: layui.setter.revenueUrl + \"/api/Area/query/list\", //接口\r\n        parseData: layui.setter.parseData,\r\n        request: layui.setter.request,\r\n        where: {\r\n          Method: \"list\",\r\n          \"Data.CompanyCoding\": \"string\"\r\n        }, // 传递给接口的参数\r\n        // request: { CompanyCoding: \"string\" }, // 传递给请求头\r\n        cols: [\r\n          [\r\n            {\r\n              title: \"所属公司\",\r\n              templet: function(d) {\r\n                return d.Me.CompanyName;\r\n              }\r\n            },\r\n            {\r\n              field: \"AreaTypeName\",\r\n              // width: 100,\r\n              title: \"区域类型\"\r\n            },\r\n            {\r\n              title: \"区域名称\",\r\n              minWidth: 100,\r\n              templet: function(d) {\r\n                // console.log(d, \"区域名称\");\r\n                return d.Me.Name;\r\n              }\r\n            },\r\n            {\r\n              title: \"区域编码\",\r\n              templet: function(d) {\r\n                // console.log(d, \"区域编码\");\r\n                return d.Me.Coding;\r\n                // if (d.DeviceType === \"blue\") {\r\n                //   return '<span class=\"layui-badge layui-bg-blue\">蓝牙</span>';\r\n                // } else {\r\n                //   return '<span class=\"layui-badge layui-bg-gray\">蓝牙</span>';\r\n                // }\r\n              }\r\n            },\r\n            {\r\n              title: \"区域状态\",\r\n              width: 100,\r\n              templet: function(d) {\r\n                console.log(d, \"d 区域状态\");\r\n                return parseInt(d.Me.Status, 10) === 1\r\n                  ? layui.consts[\"STATUS_ACTIVE\"]\r\n                  : layui.consts[\"STATUS_BLOCK\"];\r\n              }\r\n            },\r\n            {\r\n              title: \"创建时间\",\r\n              templet: function(d) {\r\n                // console.log(d, \"创建时间\");\r\n                return (\r\n                  \"<div>\" + layui.util.toDateString(d.CreateDate) + \"</div>\"\r\n                );\r\n              }\r\n            },\r\n            {\r\n              title: \"操作\",\r\n              width: 150,\r\n              align: \"center\",\r\n              fixed: \"right\",\r\n              toolbar: \"#table-Handler\"\r\n            }\r\n          ]\r\n        ],\r\n        loading: true,\r\n        page: true,\r\n        limit: 10,\r\n        text: {\r\n          none: layui.consts[\"DATA_NO\"] //默认：无数据。注：该属性为 layui 2.2.5 开始新增\r\n        }\r\n      });\r\n\r\n      //监听工具条\r\n      table.on(\"tool(table-Handler)\", function(obj) {\r\n        console.log(obj.event, \"obj 监听工具条\");\r\n\r\n        // 删除\r\n        if (obj.event === \"delete\") {\r\n          active.delete({\r\n            Tip: \"是否确认删除？\",\r\n            // Sign: \"string\",\r\n            Method: \"remove\",\r\n            // Timestamp: 0,\r\n            Data: { Id: obj.data.Me.Id }\r\n          });\r\n        }\r\n\r\n        // 编辑\r\n        if (obj.event === \"edit\") {\r\n          active.edit({\r\n            type: obj.event,\r\n            haveArray: true,\r\n            areaTypes: JSON.stringify(areaTypes),\r\n            data: JSON.stringify([obj.data.Me])\r\n          });\r\n        }\r\n      });\r\n\r\n      //服务交互\r\n      var request = {\r\n        // 获取区域类型\r\n        getAreaType() {\r\n          utils.request(\r\n            \"/api/Area/areatype\",\r\n            { Method: \"areatype\" },\r\n            \"GET\",\r\n            function(res) {\r\n              console.log(res, \"res\");\r\n              if (res.IsSucceed) {\r\n                areaTypes = res.Result;\r\n              } else {\r\n                var errorMessage = res.Errors[0].Message;\r\n                layer.msg(errorMessage, {\r\n                  icon: 5\r\n                });\r\n              }\r\n            },\r\n            function(err) {\r\n              console.log(err, \"err\");\r\n            }\r\n          );\r\n        },\r\n        // 插入新区域档案\r\n        insertArea(params) {\r\n          utils.request(\r\n            \"/api/Area/insert\",\r\n            params,\r\n            \"POST\",\r\n            function(res) {\r\n              // console.log(res, \"res\");\r\n              if (res.IsSucceed) {\r\n                // 重载表格\r\n                table.reload(\"areaFilesTable\");\r\n\r\n                layer.msg(\"新增成功\", {\r\n                  icon: 1\r\n                });\r\n              } else {\r\n                var errorMessage = res.Errors[0].Message;\r\n                layer.msg(errorMessage, {\r\n                  icon: 5\r\n                });\r\n              }\r\n            },\r\n            function(err) {\r\n              console.log(err, \"err\");\r\n            },\r\n            {\r\n              contentType: \"application/json\"\r\n            }\r\n          );\r\n        },\r\n        // 新增区域档案\r\n        addArea(params) {\r\n          utils.request(\r\n            \"/api/Common/GetInsertGuid\",\r\n            {},\r\n            \"GET\",\r\n            function(res) {\r\n              console.log(res, \"获取 Guid res\");\r\n              if (res.IsSucceed) {\r\n                // 获取到的Guid赋值给params\r\n                params.Data.Idd = res.Result;\r\n                // 插入新区域档案\r\n                request.insertArea(params);\r\n              } else {\r\n                layer.msg(\"获取Guid失败\", {\r\n                  icon: 5\r\n                });\r\n              }\r\n            },\r\n            function(err) {\r\n              console.log(err, \"获取 Guid err\");\r\n            }\r\n          );\r\n        },\r\n        // 修改区域档案\r\n        editArea(params) {\r\n          utils.request(\r\n            \"/api/Area/update\",\r\n            params,\r\n            \"PUT\",\r\n            function(res) {\r\n              // console.log(res, \"res\");\r\n              if (res.IsSucceed) {\r\n                // 重载表格\r\n                table.reload(\"areaFilesTable\");\r\n\r\n                layer.msg(\"修改成功\", {\r\n                  icon: 1\r\n                });\r\n              } else {\r\n                var errorMessage = res.Errors[0].Message;\r\n                layer.msg(errorMessage, {\r\n                  icon: 5\r\n                });\r\n              }\r\n            },\r\n            function(err) {\r\n              console.log(err, \"err\");\r\n            },\r\n            {\r\n              contentType: \"application/json\"\r\n            }\r\n          );\r\n        },\r\n        // 删除区域档案\r\n        delArea(params) {\r\n          // console.log(params, \"调用接口: /api/Area/remove\");\r\n          utils.request(\r\n            \"/api/Area/remove\",\r\n            params,\r\n            \"DELETE\",\r\n            function(res) {\r\n              // console.log(res, \"res\");\r\n              if (res.IsSucceed) {\r\n                // 重载表格\r\n                table.reload(\"areaFilesTable\");\r\n\r\n                layer.msg(\"删除成功\", {\r\n                  icon: 1\r\n                });\r\n              } else {\r\n                layer.msg(\"删除失败\", {\r\n                  icon: 5\r\n                });\r\n              }\r\n            },\r\n            function(err) {\r\n              console.log(err, \"err\");\r\n            },\r\n            {\r\n              contentType: \"application/json\"\r\n            }\r\n          );\r\n        }\r\n      };\r\n      // 获取树形菜单数据\r\n      // request.getArea({ CompanyCoding: \"string\" });\r\n\r\n      //事件\r\n      var active = {\r\n        export: function() {\r\n          console.log(\"导出数据\");\r\n        },\r\n        create: function(params) {\r\n          console.log(\"新增\");\r\n\r\n          var content = \"../tpl/from/areaFilesForm.html?\" + $.param(params);\r\n\r\n          layer.open({\r\n            type: 2,\r\n            title: \"新增区域档案\",\r\n            content,\r\n            maxmin: true,\r\n            area: [\"700px\", \"400px\"],\r\n            btn: [\"确定\", \"取消\"],\r\n            yes: function(index, layero) {\r\n              console.log(\"点击确定\");\r\n              var iframeWindow = window[\"layui-layer-iframe\" + index],\r\n                submitID = \"LAY-area-files-submit\",\r\n                submit = layero\r\n                  .find(\"iframe\")\r\n                  .contents()\r\n                  .find(\"#\" + submitID);\r\n              //监听提交\r\n              iframeWindow.layui.form.on(\"submit(\" + submitID + \")\", function(\r\n                data\r\n              ) {\r\n                var field = data.field; //获取提交的字段\r\n                var params = { Method: \"insert\", Data: field };\r\n                console.log(params, \"新增区域档案 params\");\r\n\r\n                // 新增区域档案\r\n                request.addArea(params);\r\n\r\n                layer.close(index); //关闭弹层\r\n              });\r\n              submit.trigger(\"click\");\r\n            },\r\n            btn2: function() {\r\n              console.log(\"点击取消\");\r\n            },\r\n            cancel: function() {\r\n              console.log(\"点击取消\");\r\n            }\r\n          });\r\n        },\r\n        edit: function(params) {\r\n          console.log(\"编辑\");\r\n\r\n          var content = \"../tpl/from/areaFilesForm.html?\" + $.param(params);\r\n          // console.log(content, \"content\");\r\n          layer.open({\r\n            type: 2,\r\n            title: \"编辑区域档案\",\r\n            content,\r\n            maxmin: true,\r\n            area: [\"700px\", \"400px\"],\r\n            btn: [\"确定\", \"取消\"],\r\n            yes: function(index, layero) {\r\n              console.log(\"点击确定\");\r\n              var iframeWindow = window[\"layui-layer-iframe\" + index],\r\n                submitID = \"LAY-area-files-submit\",\r\n                submit = layero\r\n                  .find(\"iframe\")\r\n                  .contents()\r\n                  .find(\"#\" + submitID);\r\n              //监听提交\r\n              iframeWindow.layui.form.on(\"submit(\" + submitID + \")\", function(\r\n                data\r\n              ) {\r\n                var parseParams = JSON.parse(params.data)[0];\r\n                var field = $.extend({}, data.field, { Id: parseParams.Id }); //获取提交的字段\r\n                var passFields = { Method: \"update\", Data: field };\r\n                console.log(passFields, \"passFields\");\r\n\r\n                // 修改区域档案\r\n                request.editArea(passFields);\r\n\r\n                layer.close(index); //关闭弹层\r\n              });\r\n              submit.trigger(\"click\");\r\n            },\r\n            btn2: function() {\r\n              console.log(\"点击取消\");\r\n            },\r\n            cancel: function() {\r\n              console.log(\"点击取消\");\r\n            }\r\n          });\r\n        },\r\n        delete: function(params) {\r\n          console.log(\"删除\");\r\n\r\n          layer.confirm(params.Tip, { icon: 3, title: \"删除提示\" }, function() {\r\n            console.log(params.Data.Id, \"待删除的ID\");\r\n\r\n            // 删除区域档案\r\n            request.delArea(params);\r\n          });\r\n        }\r\n      };\r\n\r\n      //按钮操作\r\n      $(\".layui-btn\").on(\"click\", function() {\r\n        var type = $(this).data(\"type\");\r\n        active[type]\r\n          ? active[type].call(this, {\r\n              type,\r\n              haveArray: true,\r\n              areaTypes: JSON.stringify(areaTypes),\r\n              data: []\r\n            })\r\n          : \"\";\r\n      });\r\n\r\n      // 获取任务类型\r\n      request.getAreaType();\r\n    }\r\n  );\r\n"]}