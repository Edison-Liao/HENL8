{"version":3,"sources":["jquery_ztree_excheck.js"],"names":["layui","define","exports","exports_data","model_name","jquery_ztree","jQuery","$","_consts","event","CHECK","id","checkbox","STYLE","DEFAULT","DISABLED","FALSE","TRUE","FULL","PART","FOCUS","radio","TYPE_ALL","TYPE_LEVEL","_setting","check","enable","autoCheckTrigger","chkStyle","nocheckInherit","chkDisabledInherit","radioType","chkboxType","Y","N","data","key","checked","callback","beforeCheck","onCheck","_initRoot","setting","r","getRoot","radioCheckedList","_initCache","treeId","_bindEvent","o","treeObj","c","consts","bind","srcEvent","node","tools","apply","_unbindEvent","unbind","_eventProxy","e","target","getSetting","tId","nodeEventType","treeEventType","nodeEventCallback","treeEventCallback","eqs","type","tagName","getAttribute","getNodeMainDom","length","getNodeCache","_handler","onCheckNode","onMouseoverCheck","onMouseoutCheck","proxyResult","stop","_initNode","level","n","parentNode","isFirstNode","isLastNode","openFlag","nodeChecked","checkedOld","nocheck","chkDisabled","halfCheck","check_Child_State","check_Focus","getCheckStatus","push","_beforeA","html","makeChkFlag","view","makeChkClass","_zTreeTools","zTreeTools","checkNode","checkTypeFlag","callbackFlag","this","uCanDo","checkObj","$$","checkNodeRelation","setChkClass","repairParentChkClassWithSelf","trigger","checkAllNodes","repairAllChk","getCheckedNodes","children","nodeChildren","getTreeCheckedNodes","getChangeCheckedNodes","getTreeChangeCheckedNodes","setChkDisabled","disabled","inheritParent","inheritChildren","repairSonChkDisabled","repairParentChkDisabled","getParentNode","_updateNode","updateNode","arguments","nObj","get","_data","getRadioCheckedList","checkedList","i","j","splice","half","nodes","results","onlyOne","l","chkFlag","cNode","tmp","_event","_tools","_view","pNode","pNodeChecked","parentTId","indexOf","setSonNodeCheckBox","setParentNodeCheckBox","fullStyle","chkName","className","BUTTON","root","repairChkClass","repairParentChkClass","inherit","sNode","obj","hide","show","attr","value","srcNode","pSign","pNodes","hasDisable","_z","extend","zt","newChecked","exSetting","addInitBind","addInitUnBind","addInitCache","addInitNode","addInitProxy","addInitRoot","addBeforeA","addZTreeTools","_createNodes","createNodes","index","_removeNode","removeNode","_appendNodes","appendNodes","initFlag"],"mappings":"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","file":"../../jquery_ztree_excheck.js","sourcesContent":["/*\r\n * @Author: hongChuan Zhang \r\n * @Date: 2018-10-12 17:00:32 \r\n * @Last Modified by: hongChuan Zhang\r\n * @Last Modified time: 2018-10-14 14:28:30\r\n */\r\n\r\nlayui.define([\"jquery\", \"jquery_ztree\"], function(exports) {\r\n  var model_name = \"jquery_ztree_excheck\";\r\n  var jquery_ztree = layui.jquery_ztree;\r\n  var jQuery = layui.$;\r\n  var exports_data;\r\n\r\n  (function($) {\r\n    //default consts of excheck\r\n    var _consts = {\r\n        event: {\r\n          CHECK: \"ztree_check\"\r\n        },\r\n        id: {\r\n          CHECK: \"_check\"\r\n        },\r\n        checkbox: {\r\n          STYLE: \"checkbox\",\r\n          DEFAULT: \"chk\",\r\n          DISABLED: \"disable\",\r\n          FALSE: \"false\",\r\n          TRUE: \"true\",\r\n          FULL: \"full\",\r\n          PART: \"part\",\r\n          FOCUS: \"focus\"\r\n        },\r\n        radio: {\r\n          STYLE: \"radio\",\r\n          TYPE_ALL: \"all\",\r\n          TYPE_LEVEL: \"level\"\r\n        }\r\n      },\r\n      //default setting of excheck\r\n      _setting = {\r\n        check: {\r\n          enable: false,\r\n          autoCheckTrigger: false,\r\n          chkStyle: _consts.checkbox.STYLE,\r\n          nocheckInherit: false,\r\n          chkDisabledInherit: false,\r\n          radioType: _consts.radio.TYPE_LEVEL,\r\n          chkboxType: {\r\n            Y: \"ps\",\r\n            N: \"ps\"\r\n          }\r\n        },\r\n        data: {\r\n          key: {\r\n            checked: \"checked\"\r\n          }\r\n        },\r\n        callback: {\r\n          beforeCheck: null,\r\n          onCheck: null\r\n        }\r\n      },\r\n      //default root of excheck\r\n      _initRoot = function(setting) {\r\n        var r = data.getRoot(setting);\r\n        r.radioCheckedList = [];\r\n      },\r\n      //default cache of excheck\r\n      _initCache = function(treeId) {},\r\n      //default bind event of excheck\r\n      _bindEvent = function(setting) {\r\n        var o = setting.treeObj,\r\n          c = consts.event;\r\n        o.bind(c.CHECK, function(event, srcEvent, treeId, node) {\r\n          event.srcEvent = srcEvent;\r\n          tools.apply(setting.callback.onCheck, [event, treeId, node]);\r\n        });\r\n      },\r\n      _unbindEvent = function(setting) {\r\n        var o = setting.treeObj,\r\n          c = consts.event;\r\n        o.unbind(c.CHECK);\r\n      },\r\n      //default event proxy of excheck\r\n      _eventProxy = function(e) {\r\n        var target = e.target,\r\n          setting = data.getSetting(e.data.treeId),\r\n          tId = \"\",\r\n          node = null,\r\n          nodeEventType = \"\",\r\n          treeEventType = \"\",\r\n          nodeEventCallback = null,\r\n          treeEventCallback = null;\r\n\r\n        if (tools.eqs(e.type, \"mouseover\")) {\r\n          if (\r\n            setting.check.enable &&\r\n            tools.eqs(target.tagName, \"span\") &&\r\n            target.getAttribute(\"treeNode\" + consts.id.CHECK) !== null\r\n          ) {\r\n            tId = tools.getNodeMainDom(target).id;\r\n            nodeEventType = \"mouseoverCheck\";\r\n          }\r\n        } else if (tools.eqs(e.type, \"mouseout\")) {\r\n          if (\r\n            setting.check.enable &&\r\n            tools.eqs(target.tagName, \"span\") &&\r\n            target.getAttribute(\"treeNode\" + consts.id.CHECK) !== null\r\n          ) {\r\n            tId = tools.getNodeMainDom(target).id;\r\n            nodeEventType = \"mouseoutCheck\";\r\n          }\r\n        } else if (tools.eqs(e.type, \"click\")) {\r\n          if (\r\n            setting.check.enable &&\r\n            tools.eqs(target.tagName, \"span\") &&\r\n            target.getAttribute(\"treeNode\" + consts.id.CHECK) !== null\r\n          ) {\r\n            tId = tools.getNodeMainDom(target).id;\r\n            nodeEventType = \"checkNode\";\r\n          }\r\n        }\r\n        if (tId.length > 0) {\r\n          node = data.getNodeCache(setting, tId);\r\n          switch (nodeEventType) {\r\n            case \"checkNode\":\r\n              nodeEventCallback = _handler.onCheckNode;\r\n              break;\r\n            case \"mouseoverCheck\":\r\n              nodeEventCallback = _handler.onMouseoverCheck;\r\n              break;\r\n            case \"mouseoutCheck\":\r\n              nodeEventCallback = _handler.onMouseoutCheck;\r\n              break;\r\n          }\r\n        }\r\n        var proxyResult = {\r\n          stop: nodeEventType === \"checkNode\",\r\n          node: node,\r\n          nodeEventType: nodeEventType,\r\n          nodeEventCallback: nodeEventCallback,\r\n          treeEventType: treeEventType,\r\n          treeEventCallback: treeEventCallback\r\n        };\r\n        return proxyResult;\r\n      },\r\n      //default init node of excheck\r\n      _initNode = function(\r\n        setting,\r\n        level,\r\n        n,\r\n        parentNode,\r\n        isFirstNode,\r\n        isLastNode,\r\n        openFlag\r\n      ) {\r\n        if (!n) return;\r\n        var checked = data.nodeChecked(setting, n);\r\n        checked = data.nodeChecked(setting, n, checked);\r\n        n.checkedOld = checked;\r\n        if (typeof n.nocheck == \"string\")\r\n          n.nocheck = tools.eqs(n.nocheck, \"true\");\r\n        n.nocheck =\r\n          !!n.nocheck ||\r\n          (setting.check.nocheckInherit && parentNode && !!parentNode.nocheck);\r\n        if (typeof n.chkDisabled == \"string\")\r\n          n.chkDisabled = tools.eqs(n.chkDisabled, \"true\");\r\n        n.chkDisabled =\r\n          !!n.chkDisabled ||\r\n          (setting.check.chkDisabledInherit &&\r\n            parentNode &&\r\n            !!parentNode.chkDisabled);\r\n        if (typeof n.halfCheck == \"string\")\r\n          n.halfCheck = tools.eqs(n.halfCheck, \"true\");\r\n        n.halfCheck = !!n.halfCheck;\r\n        n.check_Child_State = -1;\r\n        n.check_Focus = false;\r\n        n.getCheckStatus = function() {\r\n          return data.getCheckStatus(setting, n);\r\n        };\r\n\r\n        if (\r\n          setting.check.chkStyle == consts.radio.STYLE &&\r\n          setting.check.radioType == consts.radio.TYPE_ALL &&\r\n          checked\r\n        ) {\r\n          var r = data.getRoot(setting);\r\n          r.radioCheckedList.push(n);\r\n        }\r\n      },\r\n      //add dom for check\r\n      _beforeA = function(setting, node, html) {\r\n        if (setting.check.enable) {\r\n          data.makeChkFlag(setting, node);\r\n          html.push(\r\n            \"<span ID='\",\r\n            node.tId,\r\n            consts.id.CHECK,\r\n            \"' class='\",\r\n            view.makeChkClass(setting, node),\r\n            \"' treeNode\",\r\n            consts.id.CHECK,\r\n            node.nocheck === true ? \" style='display:none;'\" : \"\",\r\n            \"></span>\"\r\n          );\r\n        }\r\n      },\r\n      //update zTreeObj, add method of check\r\n      _zTreeTools = function(setting, zTreeTools) {\r\n        zTreeTools.checkNode = function(\r\n          node,\r\n          checked,\r\n          checkTypeFlag,\r\n          callbackFlag\r\n        ) {\r\n          var nodeChecked = data.nodeChecked(setting, node);\r\n          if (node.chkDisabled === true) return;\r\n          if (checked !== true && checked !== false) {\r\n            checked = !nodeChecked;\r\n          }\r\n          callbackFlag = !!callbackFlag;\r\n\r\n          if (nodeChecked === checked && !checkTypeFlag) {\r\n            return;\r\n          } else if (\r\n            callbackFlag &&\r\n            tools.apply(\r\n              this.setting.callback.beforeCheck,\r\n              [this.setting.treeId, node],\r\n              true\r\n            ) == false\r\n          ) {\r\n            return;\r\n          }\r\n          if (\r\n            tools.uCanDo(this.setting) &&\r\n            this.setting.check.enable &&\r\n            node.nocheck !== true\r\n          ) {\r\n            data.nodeChecked(setting, node, checked);\r\n            var checkObj = $$(node, consts.id.CHECK, this.setting);\r\n            if (\r\n              checkTypeFlag ||\r\n              this.setting.check.chkStyle === consts.radio.STYLE\r\n            )\r\n              view.checkNodeRelation(this.setting, node);\r\n            view.setChkClass(this.setting, checkObj, node);\r\n            view.repairParentChkClassWithSelf(this.setting, node);\r\n            if (callbackFlag) {\r\n              this.setting.treeObj.trigger(consts.event.CHECK, [\r\n                null,\r\n                this.setting.treeId,\r\n                node\r\n              ]);\r\n            }\r\n          }\r\n        };\r\n\r\n        zTreeTools.checkAllNodes = function(checked) {\r\n          view.repairAllChk(this.setting, !!checked);\r\n        };\r\n\r\n        zTreeTools.getCheckedNodes = function(checked) {\r\n          var checked = checked !== false;\r\n          var children = data.nodeChildren(setting, data.getRoot(this.setting));\r\n          return data.getTreeCheckedNodes(this.setting, children, checked);\r\n        };\r\n\r\n        zTreeTools.getChangeCheckedNodes = function() {\r\n          var children = data.nodeChildren(setting, data.getRoot(this.setting));\r\n          return data.getTreeChangeCheckedNodes(this.setting, children);\r\n        };\r\n\r\n        zTreeTools.setChkDisabled = function(\r\n          node,\r\n          disabled,\r\n          inheritParent,\r\n          inheritChildren\r\n        ) {\r\n          disabled = !!disabled;\r\n          inheritParent = !!inheritParent;\r\n          inheritChildren = !!inheritChildren;\r\n          view.repairSonChkDisabled(\r\n            this.setting,\r\n            node,\r\n            disabled,\r\n            inheritChildren\r\n          );\r\n          view.repairParentChkDisabled(\r\n            this.setting,\r\n            node.getParentNode(),\r\n            disabled,\r\n            inheritParent\r\n          );\r\n        };\r\n\r\n        var _updateNode = zTreeTools.updateNode;\r\n        zTreeTools.updateNode = function(node, checkTypeFlag) {\r\n          if (_updateNode) _updateNode.apply(zTreeTools, arguments);\r\n          if (!node || !this.setting.check.enable) return;\r\n          var nObj = $$(node, this.setting);\r\n          if (nObj.get(0) && tools.uCanDo(this.setting)) {\r\n            var checkObj = $$(node, consts.id.CHECK, this.setting);\r\n            if (\r\n              checkTypeFlag == true ||\r\n              this.setting.check.chkStyle === consts.radio.STYLE\r\n            )\r\n              view.checkNodeRelation(this.setting, node);\r\n            view.setChkClass(this.setting, checkObj, node);\r\n            view.repairParentChkClassWithSelf(this.setting, node);\r\n          }\r\n        };\r\n      },\r\n      //method of operate data\r\n      _data = {\r\n        getRadioCheckedList: function(setting) {\r\n          var checkedList = data.getRoot(setting).radioCheckedList;\r\n          for (var i = 0, j = checkedList.length; i < j; i++) {\r\n            if (!data.getNodeCache(setting, checkedList[i].tId)) {\r\n              checkedList.splice(i, 1);\r\n              i--;\r\n              j--;\r\n            }\r\n          }\r\n          return checkedList;\r\n        },\r\n        getCheckStatus: function(setting, node) {\r\n          if (!setting.check.enable || node.nocheck || node.chkDisabled)\r\n            return null;\r\n          var checked = data.nodeChecked(setting, node),\r\n            r = {\r\n              checked: checked,\r\n              half: node.halfCheck\r\n                ? node.halfCheck\r\n                : setting.check.chkStyle == consts.radio.STYLE\r\n                  ? node.check_Child_State === 2\r\n                  : checked\r\n                    ? node.check_Child_State > -1 && node.check_Child_State < 2\r\n                    : node.check_Child_State > 0\r\n            };\r\n          return r;\r\n        },\r\n        getTreeCheckedNodes: function(setting, nodes, checked, results) {\r\n          if (!nodes) return [];\r\n          var onlyOne =\r\n            checked &&\r\n            setting.check.chkStyle == consts.radio.STYLE &&\r\n            setting.check.radioType == consts.radio.TYPE_ALL;\r\n          results = !results ? [] : results;\r\n          for (var i = 0, l = nodes.length; i < l; i++) {\r\n            var node = nodes[i];\r\n            var children = data.nodeChildren(setting, node);\r\n            var nodeChecked = data.nodeChecked(setting, node);\r\n            if (\r\n              node.nocheck !== true &&\r\n              node.chkDisabled !== true &&\r\n              nodeChecked == checked\r\n            ) {\r\n              results.push(node);\r\n              if (onlyOne) {\r\n                break;\r\n              }\r\n            }\r\n            data.getTreeCheckedNodes(setting, children, checked, results);\r\n            if (onlyOne && results.length > 0) {\r\n              break;\r\n            }\r\n          }\r\n          return results;\r\n        },\r\n        getTreeChangeCheckedNodes: function(setting, nodes, results) {\r\n          if (!nodes) return [];\r\n          results = !results ? [] : results;\r\n          for (var i = 0, l = nodes.length; i < l; i++) {\r\n            var node = nodes[i];\r\n            var children = data.nodeChildren(setting, node);\r\n            var nodeChecked = data.nodeChecked(setting, node);\r\n            if (\r\n              node.nocheck !== true &&\r\n              node.chkDisabled !== true &&\r\n              nodeChecked != node.checkedOld\r\n            ) {\r\n              results.push(node);\r\n            }\r\n            data.getTreeChangeCheckedNodes(setting, children, results);\r\n          }\r\n          return results;\r\n        },\r\n        makeChkFlag: function(setting, node) {\r\n          if (!node) return;\r\n          var chkFlag = -1;\r\n          var children = data.nodeChildren(setting, node);\r\n          if (children) {\r\n            for (var i = 0, l = children.length; i < l; i++) {\r\n              var cNode = children[i];\r\n              var nodeChecked = data.nodeChecked(setting, cNode);\r\n              var tmp = -1;\r\n              if (setting.check.chkStyle == consts.radio.STYLE) {\r\n                if (cNode.nocheck === true || cNode.chkDisabled === true) {\r\n                  tmp = cNode.check_Child_State;\r\n                } else if (cNode.halfCheck === true) {\r\n                  tmp = 2;\r\n                } else if (nodeChecked) {\r\n                  tmp = 2;\r\n                } else {\r\n                  tmp = cNode.check_Child_State > 0 ? 2 : 0;\r\n                }\r\n                if (tmp == 2) {\r\n                  chkFlag = 2;\r\n                  break;\r\n                } else if (tmp == 0) {\r\n                  chkFlag = 0;\r\n                }\r\n              } else if (setting.check.chkStyle == consts.checkbox.STYLE) {\r\n                if (cNode.nocheck === true || cNode.chkDisabled === true) {\r\n                  tmp = cNode.check_Child_State;\r\n                } else if (cNode.halfCheck === true) {\r\n                  tmp = 1;\r\n                } else if (nodeChecked) {\r\n                  tmp =\r\n                    cNode.check_Child_State === -1 ||\r\n                    cNode.check_Child_State === 2\r\n                      ? 2\r\n                      : 1;\r\n                } else {\r\n                  tmp = cNode.check_Child_State > 0 ? 1 : 0;\r\n                }\r\n                if (tmp === 1) {\r\n                  chkFlag = 1;\r\n                  break;\r\n                } else if (\r\n                  tmp === 2 &&\r\n                  chkFlag > -1 &&\r\n                  i > 0 &&\r\n                  tmp !== chkFlag\r\n                ) {\r\n                  chkFlag = 1;\r\n                  break;\r\n                } else if (chkFlag === 2 && tmp > -1 && tmp < 2) {\r\n                  chkFlag = 1;\r\n                  break;\r\n                } else if (tmp > -1) {\r\n                  chkFlag = tmp;\r\n                }\r\n              }\r\n            }\r\n          }\r\n          node.check_Child_State = chkFlag;\r\n        }\r\n      },\r\n      //method of event proxy\r\n      _event = {},\r\n      //method of event handler\r\n      _handler = {\r\n        onCheckNode: function(event, node) {\r\n          if (node.chkDisabled === true) return false;\r\n          var setting = data.getSetting(event.data.treeId);\r\n          if (\r\n            tools.apply(\r\n              setting.callback.beforeCheck,\r\n              [setting.treeId, node],\r\n              true\r\n            ) == false\r\n          )\r\n            return true;\r\n          var nodeChecked = data.nodeChecked(setting, node);\r\n          data.nodeChecked(setting, node, !nodeChecked);\r\n          view.checkNodeRelation(setting, node);\r\n          var checkObj = $$(node, consts.id.CHECK, setting);\r\n          view.setChkClass(setting, checkObj, node);\r\n          view.repairParentChkClassWithSelf(setting, node);\r\n          setting.treeObj.trigger(consts.event.CHECK, [\r\n            event,\r\n            setting.treeId,\r\n            node\r\n          ]);\r\n          return true;\r\n        },\r\n        onMouseoverCheck: function(event, node) {\r\n          if (node.chkDisabled === true) return false;\r\n          var setting = data.getSetting(event.data.treeId),\r\n            checkObj = $$(node, consts.id.CHECK, setting);\r\n          node.check_Focus = true;\r\n          view.setChkClass(setting, checkObj, node);\r\n          return true;\r\n        },\r\n        onMouseoutCheck: function(event, node) {\r\n          if (node.chkDisabled === true) return false;\r\n          var setting = data.getSetting(event.data.treeId),\r\n            checkObj = $$(node, consts.id.CHECK, setting);\r\n          node.check_Focus = false;\r\n          view.setChkClass(setting, checkObj, node);\r\n          return true;\r\n        }\r\n      },\r\n      //method of tools for zTree\r\n      _tools = {},\r\n      //method of operate ztree dom\r\n      _view = {\r\n        checkNodeRelation: function(setting, node) {\r\n          var pNode,\r\n            i,\r\n            l,\r\n            r = consts.radio;\r\n          var nodeChecked = data.nodeChecked(setting, node);\r\n          if (setting.check.chkStyle == r.STYLE) {\r\n            var checkedList = data.getRadioCheckedList(setting);\r\n            if (nodeChecked) {\r\n              if (setting.check.radioType == r.TYPE_ALL) {\r\n                for (i = checkedList.length - 1; i >= 0; i--) {\r\n                  pNode = checkedList[i];\r\n                  var pNodeChecked = data.nodeChecked(setting, pNode);\r\n                  if (pNodeChecked && pNode != node) {\r\n                    data.nodeChecked(setting, pNode, false);\r\n                    checkedList.splice(i, 1);\r\n\r\n                    view.setChkClass(\r\n                      setting,\r\n                      $$(pNode, consts.id.CHECK, setting),\r\n                      pNode\r\n                    );\r\n                    if (pNode.parentTId != node.parentTId) {\r\n                      view.repairParentChkClassWithSelf(setting, pNode);\r\n                    }\r\n                  }\r\n                }\r\n                checkedList.push(node);\r\n              } else {\r\n                var parentNode = node.parentTId\r\n                  ? node.getParentNode()\r\n                  : data.getRoot(setting);\r\n                var children = data.nodeChildren(setting, parentNode);\r\n                for (i = 0, l = children.length; i < l; i++) {\r\n                  pNode = children[i];\r\n                  var pNodeChecked = data.nodeChecked(setting, pNode);\r\n                  if (pNodeChecked && pNode != node) {\r\n                    data.nodeChecked(setting, pNode, false);\r\n                    view.setChkClass(\r\n                      setting,\r\n                      $$(pNode, consts.id.CHECK, setting),\r\n                      pNode\r\n                    );\r\n                  }\r\n                }\r\n              }\r\n            } else if (setting.check.radioType == r.TYPE_ALL) {\r\n              for (i = 0, l = checkedList.length; i < l; i++) {\r\n                if (node == checkedList[i]) {\r\n                  checkedList.splice(i, 1);\r\n                  break;\r\n                }\r\n              }\r\n            }\r\n          } else {\r\n            var children = data.nodeChildren(setting, node);\r\n            if (\r\n              nodeChecked &&\r\n              (!children ||\r\n                children.length == 0 ||\r\n                setting.check.chkboxType.Y.indexOf(\"s\") > -1)\r\n            ) {\r\n              view.setSonNodeCheckBox(setting, node, true);\r\n            }\r\n            if (\r\n              !nodeChecked &&\r\n              (!children ||\r\n                children.length == 0 ||\r\n                setting.check.chkboxType.N.indexOf(\"s\") > -1)\r\n            ) {\r\n              view.setSonNodeCheckBox(setting, node, false);\r\n            }\r\n            if (nodeChecked && setting.check.chkboxType.Y.indexOf(\"p\") > -1) {\r\n              view.setParentNodeCheckBox(setting, node, true);\r\n            }\r\n            if (!nodeChecked && setting.check.chkboxType.N.indexOf(\"p\") > -1) {\r\n              view.setParentNodeCheckBox(setting, node, false);\r\n            }\r\n          }\r\n        },\r\n        makeChkClass: function(setting, node) {\r\n          var c = consts.checkbox,\r\n            r = consts.radio,\r\n            fullStyle = \"\";\r\n          var nodeChecked = data.nodeChecked(setting, node);\r\n          if (node.chkDisabled === true) {\r\n            fullStyle = c.DISABLED;\r\n          } else if (node.halfCheck) {\r\n            fullStyle = c.PART;\r\n          } else if (setting.check.chkStyle == r.STYLE) {\r\n            fullStyle = node.check_Child_State < 1 ? c.FULL : c.PART;\r\n          } else {\r\n            fullStyle = nodeChecked\r\n              ? node.check_Child_State === 2 || node.check_Child_State === -1\r\n                ? c.FULL\r\n                : c.PART\r\n              : node.check_Child_State < 1\r\n                ? c.FULL\r\n                : c.PART;\r\n          }\r\n          var chkName =\r\n            setting.check.chkStyle +\r\n            \"_\" +\r\n            (nodeChecked ? c.TRUE : c.FALSE) +\r\n            \"_\" +\r\n            fullStyle;\r\n          chkName =\r\n            node.check_Focus && node.chkDisabled !== true\r\n              ? chkName + \"_\" + c.FOCUS\r\n              : chkName;\r\n          return consts.className.BUTTON + \" \" + c.DEFAULT + \" \" + chkName;\r\n        },\r\n        repairAllChk: function(setting, checked) {\r\n          if (\r\n            setting.check.enable &&\r\n            setting.check.chkStyle === consts.checkbox.STYLE\r\n          ) {\r\n            var root = data.getRoot(setting);\r\n            var children = data.nodeChildren(setting, root);\r\n            for (var i = 0, l = children.length; i < l; i++) {\r\n              var node = children[i];\r\n              if (node.nocheck !== true && node.chkDisabled !== true) {\r\n                data.nodeChecked(setting, node, checked);\r\n              }\r\n              view.setSonNodeCheckBox(setting, node, checked);\r\n            }\r\n          }\r\n        },\r\n        repairChkClass: function(setting, node) {\r\n          if (!node) return;\r\n          data.makeChkFlag(setting, node);\r\n          if (node.nocheck !== true) {\r\n            var checkObj = $$(node, consts.id.CHECK, setting);\r\n            view.setChkClass(setting, checkObj, node);\r\n          }\r\n        },\r\n        repairParentChkClass: function(setting, node) {\r\n          if (!node || !node.parentTId) return;\r\n          var pNode = node.getParentNode();\r\n          view.repairChkClass(setting, pNode);\r\n          view.repairParentChkClass(setting, pNode);\r\n        },\r\n        repairParentChkClassWithSelf: function(setting, node) {\r\n          if (!node) return;\r\n          var children = data.nodeChildren(setting, node);\r\n          if (children && children.length > 0) {\r\n            view.repairParentChkClass(setting, children[0]);\r\n          } else {\r\n            view.repairParentChkClass(setting, node);\r\n          }\r\n        },\r\n        repairSonChkDisabled: function(setting, node, chkDisabled, inherit) {\r\n          if (!node) return;\r\n          if (node.chkDisabled != chkDisabled) {\r\n            node.chkDisabled = chkDisabled;\r\n          }\r\n          view.repairChkClass(setting, node);\r\n          var children = data.nodeChildren(setting, node);\r\n          if (children && inherit) {\r\n            for (var i = 0, l = children.length; i < l; i++) {\r\n              var sNode = children[i];\r\n              view.repairSonChkDisabled(setting, sNode, chkDisabled, inherit);\r\n            }\r\n          }\r\n        },\r\n        repairParentChkDisabled: function(setting, node, chkDisabled, inherit) {\r\n          if (!node) return;\r\n          if (node.chkDisabled != chkDisabled && inherit) {\r\n            node.chkDisabled = chkDisabled;\r\n          }\r\n          view.repairChkClass(setting, node);\r\n          view.repairParentChkDisabled(\r\n            setting,\r\n            node.getParentNode(),\r\n            chkDisabled,\r\n            inherit\r\n          );\r\n        },\r\n        setChkClass: function(setting, obj, node) {\r\n          if (!obj) return;\r\n          if (node.nocheck === true) {\r\n            obj.hide();\r\n          } else {\r\n            obj.show();\r\n          }\r\n          obj.attr(\"class\", view.makeChkClass(setting, node));\r\n        },\r\n        setParentNodeCheckBox: function(setting, node, value, srcNode) {\r\n          var checkObj = $$(node, consts.id.CHECK, setting);\r\n          if (!srcNode) srcNode = node;\r\n          data.makeChkFlag(setting, node);\r\n          if (node.nocheck !== true && node.chkDisabled !== true) {\r\n            data.nodeChecked(setting, node, value);\r\n            view.setChkClass(setting, checkObj, node);\r\n            if (setting.check.autoCheckTrigger && node != srcNode) {\r\n              setting.treeObj.trigger(consts.event.CHECK, [\r\n                null,\r\n                setting.treeId,\r\n                node\r\n              ]);\r\n            }\r\n          }\r\n          if (node.parentTId) {\r\n            var pSign = true;\r\n            if (!value) {\r\n              var pNodes = data.nodeChildren(setting, node.getParentNode());\r\n              for (var i = 0, l = pNodes.length; i < l; i++) {\r\n                var pNode = pNodes[i];\r\n                var nodeChecked = data.nodeChecked(setting, pNode);\r\n                if (\r\n                  (pNode.nocheck !== true &&\r\n                    pNode.chkDisabled !== true &&\r\n                    nodeChecked) ||\r\n                  ((pNode.nocheck === true || pNode.chkDisabled === true) &&\r\n                    pNode.check_Child_State > 0)\r\n                ) {\r\n                  pSign = false;\r\n                  break;\r\n                }\r\n              }\r\n            }\r\n            if (pSign) {\r\n              view.setParentNodeCheckBox(\r\n                setting,\r\n                node.getParentNode(),\r\n                value,\r\n                srcNode\r\n              );\r\n            }\r\n          }\r\n        },\r\n        setSonNodeCheckBox: function(setting, node, value, srcNode) {\r\n          if (!node) return;\r\n          var checkObj = $$(node, consts.id.CHECK, setting);\r\n          if (!srcNode) srcNode = node;\r\n\r\n          var hasDisable = false;\r\n          var children = data.nodeChildren(setting, node);\r\n          if (children) {\r\n            for (var i = 0, l = children.length; i < l; i++) {\r\n              var sNode = children[i];\r\n              view.setSonNodeCheckBox(setting, sNode, value, srcNode);\r\n              if (sNode.chkDisabled === true) hasDisable = true;\r\n            }\r\n          }\r\n\r\n          if (node != data.getRoot(setting) && node.chkDisabled !== true) {\r\n            if (hasDisable && node.nocheck !== true) {\r\n              data.makeChkFlag(setting, node);\r\n            }\r\n            if (node.nocheck !== true && node.chkDisabled !== true) {\r\n              data.nodeChecked(setting, node, value);\r\n              if (!hasDisable)\r\n                node.check_Child_State =\r\n                  children && children.length > 0 ? (value ? 2 : 0) : -1;\r\n            } else {\r\n              node.check_Child_State = -1;\r\n            }\r\n            view.setChkClass(setting, checkObj, node);\r\n            if (\r\n              setting.check.autoCheckTrigger &&\r\n              node != srcNode &&\r\n              node.nocheck !== true &&\r\n              node.chkDisabled !== true\r\n            ) {\r\n              setting.treeObj.trigger(consts.event.CHECK, [\r\n                null,\r\n                setting.treeId,\r\n                node\r\n              ]);\r\n            }\r\n          }\r\n        }\r\n      },\r\n      _z = {\r\n        tools: _tools,\r\n        view: _view,\r\n        event: _event,\r\n        data: _data\r\n      };\r\n    $.extend(true, jquery_ztree.consts, _consts);\r\n    $.extend(true, jquery_ztree._z, _z);\r\n\r\n    var zt = jquery_ztree,\r\n      tools = zt._z.tools,\r\n      consts = zt.consts,\r\n      view = zt._z.view,\r\n      data = zt._z.data,\r\n      event = zt._z.event,\r\n      $$ = tools.$;\r\n\r\n    data.nodeChecked = function(setting, node, newChecked) {\r\n      if (!node) {\r\n        return false;\r\n      }\r\n      var key = setting.data.key.checked;\r\n      if (typeof newChecked !== \"undefined\") {\r\n        if (typeof newChecked === \"string\") {\r\n          newChecked = tools.eqs(newChecked, \"true\");\r\n        }\r\n        newChecked = !!newChecked;\r\n        node[key] = newChecked;\r\n      }\r\n      return node[key];\r\n    };\r\n\r\n    data.exSetting(_setting);\r\n    data.addInitBind(_bindEvent);\r\n    data.addInitUnBind(_unbindEvent);\r\n    data.addInitCache(_initCache);\r\n    data.addInitNode(_initNode);\r\n    data.addInitProxy(_eventProxy, true);\r\n    data.addInitRoot(_initRoot);\r\n    data.addBeforeA(_beforeA);\r\n    data.addZTreeTools(_zTreeTools);\r\n\r\n    var _createNodes = view.createNodes;\r\n    view.createNodes = function(setting, level, nodes, parentNode, index) {\r\n      if (_createNodes) _createNodes.apply(view, arguments);\r\n      if (!nodes) return;\r\n      view.repairParentChkClassWithSelf(setting, parentNode);\r\n    };\r\n    var _removeNode = view.removeNode;\r\n    view.removeNode = function(setting, node) {\r\n      var parentNode = node.getParentNode();\r\n      if (_removeNode) _removeNode.apply(view, arguments);\r\n      if (!node || !parentNode) return;\r\n      view.repairChkClass(setting, parentNode);\r\n      view.repairParentChkClass(setting, parentNode);\r\n    };\r\n\r\n    var _appendNodes = view.appendNodes;\r\n    view.appendNodes = function(\r\n      setting,\r\n      level,\r\n      nodes,\r\n      parentNode,\r\n      index,\r\n      initFlag,\r\n      openFlag\r\n    ) {\r\n      var html = \"\";\r\n      if (_appendNodes) {\r\n        html = _appendNodes.apply(view, arguments);\r\n      }\r\n      if (parentNode) {\r\n        data.makeChkFlag(setting, parentNode);\r\n      }\r\n      return html;\r\n    };\r\n  })(jQuery);\r\n\r\n  exports_data = jquery_ztree;\r\n  exports(model_name, exports_data);\r\n});\r\n"]}