{"version":3,"sources":["jquery_ztree.js"],"names":["_typeof","Symbol","iterator","obj","constructor","prototype","layui","define","exports","model_name","jQuery","$","exports_data","settings","roots","caches","_consts","className","BUTTON","LEVEL","ICO_LOADING","SWITCH","NAME","event","NODECREATED","CLICK","EXPAND","COLLAPSE","ASYNC_SUCCESS","ASYNC_ERROR","REMOVE","SELECTED","UNSELECTED","id","A","ICON","SPAN","UL","line","ROOT","ROOTS","CENTER","BOTTOM","NOLINE","LINE","folder","OPEN","CLOSE","DOCU","node","CURSELECTED","_setting","treeId","treeObj","view","addDiyDom","autoCancelSelected","dblClickExpand","expandSpeed","fontCss","nameIsHTML","selectedMulti","showIcon","showLine","showTitle","txtSelectedEnable","data","key","isParent","children","name","title","url","icon","simpleData","enable","idKey","pIdKey","rootPId","keep","parent","leaf","async","contentType","type","dataType","headers","xhrFields","autoParam","otherParam","dataFilter","callback","beforeAsync","beforeClick","beforeDblClick","beforeRightClick","beforeMouseDown","beforeMouseUp","beforeExpand","beforeCollapse","beforeRemove","onAsyncError","onAsyncSuccess","onNodeCreated","onClick","onDblClick","onRightClick","onMouseDown","onMouseUp","onExpand","onCollapse","onRemove","_initRoot","setting","r","getRoot","setRoot","nodeChildren","expandTriggerFlag","curSelectedList","noSelection","createdNodes","zId","_ver","Date","getTime","_initCache","c","getCache","setCache","nodes","doms","_bindEvent","o","consts","bind","tools","apply","srcEvent","clickFlag","msg","XMLHttpRequest","textStatus","errorThrown","treeNode","onSelected","onUnSelected","_unbindEvent","unbind","_eventProxy","target","getSetting","tId","nodeEventType","treeEventType","nodeEventCallback","treeEventCallback","tmp","eqs","tagName","getAttribute","getNodeMainDom","getMDom","attrName","length","getNodeCache","nodeIsParent","handler","onSwitchNode","onClickNode","onZTreeMousedown","onZTreeMouseup","onZTreeDblclick","onZTreeContextmenu","proxyResult","stop","_initNode","level","n","parentNode","isFirstNode","isLastNode","openFlag","parentTId","open","isArray","zAsync","getParentNode","getPreNode","getNextNode","getIndex","getNodeIndex","getPath","getNodePath","isAjaxing","fixPIdKeyValue","_init","proxys","beforeA","afterA","innerBeforeA","innerAfterA","zTreeTools","addNodeCache","getNodeCacheId","substring","lastIndexOf","addAfterA","push","addBeforeA","addInnerAfterA","addInnerBeforeA","addInitBind","bindEvent","addInitUnBind","unbindEvent","addInitCache","initCache","addInitNode","initNode","addInitProxy","initProxy","isFirst","splice","addInitRoot","initRoot","addNodesData","index","params","setNodeLineIcos","concat","addSelectedNode","root","isSelectedNode","addCreatedNode","addZTreeTools","exSetting","s","extend","getAfterA","array","i","j","this","arguments","getBeforeA","getInnerAfterA","getInnerBeforeA","p","l","getNodeByParam","value","path","getNodes","getNodesByParam","result","getNodesByParamFuzzy","toLowerCase","indexOf","getNodesByFilter","filter","isSingle","invokeParam","tmpResult","getRoots","getSettings","getZTreeTools","treeTools","preNode","nextNode","newChildren","newIsParent","nodeName","newName","nodeTitle","t","removeNodeCache","removeSelectedNode","trigger","cache","setZTreeTools","transformToArrayFormat","_do","_node","transformTozTreeFormat","sNodes","parentKey","tmpMap","bindTree","eventParam","onSelectStart","css","-moz-user-select","proxy","unbindTree","doProxy","e","results","uCanDo","x","switchNode","ctrlKey","metaKey","cancelPreSelectedNode","selectNode","originalEvent","srcElement","fun","param","defaultValue","zt","canAsync","clone","str1","str2","arr","Object","toString","isElement","HTMLElement","nodeType","exp","get","ownerDocument","curDom","targetExpr","parentsUntil","isChildOrSelf","dom","parentId","closest","addNodes","newNodes","isSilent","target_switchObj","$$","target_icoObj","target_ulObj","replaceSwitchClass","replaceIcoClass","display","createNodes","expandCollapseParentNode","appendNodes","initFlag","html","tmpPNode","tmpPChild","childHtml","makeDOMNodeMainBefore","makeDOMNodeLine","makeDOMNodeNameBefore","makeDOMNodeIcon","makeDOMNodeNameAfter","makeUlHtml","join","makeDOMNodeMainAfter","appendParentULDom","nObj","ulObj","remove","append","asyncNode","icoObj","attr","style","class","tmpParam","pKey","split","spKey","_tmpV","ajax","JSON","stringify","success","eval","err","error","excludeNode","list","removeClass","createNodeCallback","shift","parentObj","nextObj","zTreeHtml","before","destroy","empty","expandCollapseNode","expandFlag","animateFlag","tmpCb","_callback","switchObj","iconOpen","iconClose","makeNodeIcoStyle","show","slideDown","slideUp","hide","expandCollapseSonNode","treeNodes","selfAnimateSign","nameStr","replace","makeNodeIcoClass","makeNodeLineClass","makeNodeUrl","fontcss","makeNodeFontCss","fontStyle","f","click","makeNodeTarget","icoCss","iconSkin","icoStyle","lineClass","makeNodeLineClassEx","urlKey","content","makeUlLineClass","removeChildNodes","tmp_switchObj","tmp_icoObj","scrollIntoView","Element","contRect","getBoundingClientRect","findMeRect","top","bottom","right","left","scrollIntoViewIfNeeded","centerIfNeeded","makeRange","start","end","coverRange","inner","outer","Math","max","min","makePoint","y","translate","dX","dY","absolute","elem","pt","offsetLeft","offsetTop","offsetParent","origin","extent","offsetWidth","offsetHeight","clientLeft","clientTop","scrollLeft","clientWidth","scrollTop","clientHeight","setFirstNode","setLastNode","removeNode","tmp_ulObj","childLength","newLast","tmp_first_switchObj","tmpName","undefined","tmpList","removeAttr","addFlag","addClass","setNodeFontCss","aObj","ulLine","setNodeName","text","setNodeTarget","setNodeUrl","_z","getZTreeObj","init","zSetting","zNodes","document","body","maxHeight","addCallback","xNewNodes","parseInt","isNaN","cancelSelectedNode","expandAll","expandNode","sonSign","focus","callbackFlag","showNodeFocus","a","getNodeByTId","getSelectedNodes","reAsyncChildNodesPromise","reloadType","promise","Promise","resolve","reject","reAsyncChildNodes","isRoot","refresh","blur","transformTozTreeNodes","simpleNodes","transformToArray","updateNode","checkTypeFlag"],"mappings":"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","file":"../../jquery_ztree.js","sourcesContent":["layui.define([\"jquery\"], function(exports) {\r\n  var model_name = \"jquery_ztree\";\r\n  var jQuery = layui.$;\r\n  var exports_data;\r\n  (function($) {\r\n    var settings = {},\r\n      roots = {},\r\n      caches = {},\r\n      //default consts of core\r\n      _consts = {\r\n        className: {\r\n          BUTTON: \"button\",\r\n          LEVEL: \"level\",\r\n          ICO_LOADING: \"ico_loading\",\r\n          SWITCH: \"switch\",\r\n          NAME: \"node_name\"\r\n        },\r\n        event: {\r\n          NODECREATED: \"ztree_nodeCreated\",\r\n          CLICK: \"ztree_click\",\r\n          EXPAND: \"ztree_expand\",\r\n          COLLAPSE: \"ztree_collapse\",\r\n          ASYNC_SUCCESS: \"ztree_async_success\",\r\n          ASYNC_ERROR: \"ztree_async_error\",\r\n          REMOVE: \"ztree_remove\",\r\n          SELECTED: \"ztree_selected\",\r\n          UNSELECTED: \"ztree_unselected\"\r\n        },\r\n        id: {\r\n          A: \"_a\",\r\n          ICON: \"_ico\",\r\n          SPAN: \"_span\",\r\n          SWITCH: \"_switch\",\r\n          UL: \"_ul\"\r\n        },\r\n        line: {\r\n          ROOT: \"root\",\r\n          ROOTS: \"roots\",\r\n          CENTER: \"center\",\r\n          BOTTOM: \"bottom\",\r\n          NOLINE: \"noline\",\r\n          LINE: \"line\"\r\n        },\r\n        folder: {\r\n          OPEN: \"open\",\r\n          CLOSE: \"close\",\r\n          DOCU: \"docu\"\r\n        },\r\n        node: {\r\n          CURSELECTED: \"curSelectedNode\"\r\n        }\r\n      },\r\n      //default setting of core\r\n      _setting = {\r\n        treeId: \"\",\r\n        treeObj: null,\r\n        view: {\r\n          addDiyDom: null,\r\n          autoCancelSelected: true,\r\n          dblClickExpand: true,\r\n          expandSpeed: \"fast\",\r\n          fontCss: {},\r\n          nameIsHTML: false,\r\n          selectedMulti: true,\r\n          showIcon: true,\r\n          showLine: true,\r\n          showTitle: true,\r\n          txtSelectedEnable: false\r\n        },\r\n        data: {\r\n          key: {\r\n            isParent: \"isParent\",\r\n            children: \"children\",\r\n            name: \"name\",\r\n            title: \"\",\r\n            url: \"url\",\r\n            icon: \"icon\"\r\n          },\r\n          simpleData: {\r\n            enable: false,\r\n            idKey: \"id\",\r\n            pIdKey: \"pId\",\r\n            rootPId: null\r\n          },\r\n          keep: {\r\n            parent: false,\r\n            leaf: false\r\n          }\r\n        },\r\n        async: {\r\n          enable: false,\r\n          contentType: \"application/x-www-form-urlencoded\",\r\n          type: \"post\",\r\n          dataType: \"text\",\r\n          headers: {},\r\n          xhrFields: {},\r\n          url: \"\",\r\n          autoParam: [],\r\n          otherParam: [],\r\n          dataFilter: null\r\n        },\r\n        callback: {\r\n          beforeAsync: null,\r\n          beforeClick: null,\r\n          beforeDblClick: null,\r\n          beforeRightClick: null,\r\n          beforeMouseDown: null,\r\n          beforeMouseUp: null,\r\n          beforeExpand: null,\r\n          beforeCollapse: null,\r\n          beforeRemove: null,\r\n\r\n          onAsyncError: null,\r\n          onAsyncSuccess: null,\r\n          onNodeCreated: null,\r\n          onClick: null,\r\n          onDblClick: null,\r\n          onRightClick: null,\r\n          onMouseDown: null,\r\n          onMouseUp: null,\r\n          onExpand: null,\r\n          onCollapse: null,\r\n          onRemove: null\r\n        }\r\n      },\r\n      //default root of core\r\n      //zTree use root to save full data\r\n      _initRoot = function(setting) {\r\n        var r = data.getRoot(setting);\r\n        if (!r) {\r\n          r = {};\r\n          data.setRoot(setting, r);\r\n        }\r\n        data.nodeChildren(setting, r, []);\r\n        r.expandTriggerFlag = false;\r\n        r.curSelectedList = [];\r\n        r.noSelection = true;\r\n        r.createdNodes = [];\r\n        r.zId = 0;\r\n        r._ver = new Date().getTime();\r\n      },\r\n      //default cache of core\r\n      _initCache = function(setting) {\r\n        var c = data.getCache(setting);\r\n        if (!c) {\r\n          c = {};\r\n          data.setCache(setting, c);\r\n        }\r\n        c.nodes = [];\r\n        c.doms = [];\r\n      },\r\n      //default bindEvent of core\r\n      _bindEvent = function(setting) {\r\n        var o = setting.treeObj,\r\n          c = consts.event;\r\n        o.bind(c.NODECREATED, function(event, treeId, node) {\r\n          tools.apply(setting.callback.onNodeCreated, [event, treeId, node]);\r\n        });\r\n\r\n        o.bind(c.CLICK, function(event, srcEvent, treeId, node, clickFlag) {\r\n          tools.apply(setting.callback.onClick, [\r\n            srcEvent,\r\n            treeId,\r\n            node,\r\n            clickFlag\r\n          ]);\r\n        });\r\n\r\n        o.bind(c.EXPAND, function(event, treeId, node) {\r\n          tools.apply(setting.callback.onExpand, [event, treeId, node]);\r\n        });\r\n\r\n        o.bind(c.COLLAPSE, function(event, treeId, node) {\r\n          tools.apply(setting.callback.onCollapse, [event, treeId, node]);\r\n        });\r\n\r\n        o.bind(c.ASYNC_SUCCESS, function(event, treeId, node, msg) {\r\n          tools.apply(setting.callback.onAsyncSuccess, [\r\n            event,\r\n            treeId,\r\n            node,\r\n            msg\r\n          ]);\r\n        });\r\n\r\n        o.bind(c.ASYNC_ERROR, function(\r\n          event,\r\n          treeId,\r\n          node,\r\n          XMLHttpRequest,\r\n          textStatus,\r\n          errorThrown\r\n        ) {\r\n          tools.apply(setting.callback.onAsyncError, [\r\n            event,\r\n            treeId,\r\n            node,\r\n            XMLHttpRequest,\r\n            textStatus,\r\n            errorThrown\r\n          ]);\r\n        });\r\n\r\n        o.bind(c.REMOVE, function(event, treeId, treeNode) {\r\n          tools.apply(setting.callback.onRemove, [event, treeId, treeNode]);\r\n        });\r\n\r\n        o.bind(c.SELECTED, function(event, treeId, node) {\r\n          tools.apply(setting.callback.onSelected, [treeId, node]);\r\n        });\r\n        o.bind(c.UNSELECTED, function(event, treeId, node) {\r\n          tools.apply(setting.callback.onUnSelected, [treeId, node]);\r\n        });\r\n      },\r\n      _unbindEvent = function(setting) {\r\n        var o = setting.treeObj,\r\n          c = consts.event;\r\n        o.unbind(c.NODECREATED)\r\n          .unbind(c.CLICK)\r\n          .unbind(c.EXPAND)\r\n          .unbind(c.COLLAPSE)\r\n          .unbind(c.ASYNC_SUCCESS)\r\n          .unbind(c.ASYNC_ERROR)\r\n          .unbind(c.REMOVE)\r\n          .unbind(c.SELECTED)\r\n          .unbind(c.UNSELECTED);\r\n      },\r\n      //default event proxy of core\r\n      _eventProxy = function(event) {\r\n        var target = event.target,\r\n          setting = data.getSetting(event.data.treeId),\r\n          tId = \"\",\r\n          node = null,\r\n          nodeEventType = \"\",\r\n          treeEventType = \"\",\r\n          nodeEventCallback = null,\r\n          treeEventCallback = null,\r\n          tmp = null;\r\n\r\n        if (tools.eqs(event.type, \"mousedown\")) {\r\n          treeEventType = \"mousedown\";\r\n        } else if (tools.eqs(event.type, \"mouseup\")) {\r\n          treeEventType = \"mouseup\";\r\n        } else if (tools.eqs(event.type, \"contextmenu\")) {\r\n          treeEventType = \"contextmenu\";\r\n        } else if (tools.eqs(event.type, \"click\")) {\r\n          if (\r\n            tools.eqs(target.tagName, \"span\") &&\r\n            target.getAttribute(\"treeNode\" + consts.id.SWITCH) !== null\r\n          ) {\r\n            tId = tools.getNodeMainDom(target).id;\r\n            nodeEventType = \"switchNode\";\r\n          } else {\r\n            tmp = tools.getMDom(setting, target, [\r\n              { tagName: \"a\", attrName: \"treeNode\" + consts.id.A }\r\n            ]);\r\n            if (tmp) {\r\n              tId = tools.getNodeMainDom(tmp).id;\r\n              nodeEventType = \"clickNode\";\r\n            }\r\n          }\r\n        } else if (tools.eqs(event.type, \"dblclick\")) {\r\n          treeEventType = \"dblclick\";\r\n          tmp = tools.getMDom(setting, target, [\r\n            { tagName: \"a\", attrName: \"treeNode\" + consts.id.A }\r\n          ]);\r\n          if (tmp) {\r\n            tId = tools.getNodeMainDom(tmp).id;\r\n            nodeEventType = \"switchNode\";\r\n          }\r\n        }\r\n        if (treeEventType.length > 0 && tId.length == 0) {\r\n          tmp = tools.getMDom(setting, target, [\r\n            { tagName: \"a\", attrName: \"treeNode\" + consts.id.A }\r\n          ]);\r\n          if (tmp) {\r\n            tId = tools.getNodeMainDom(tmp).id;\r\n          }\r\n        }\r\n        // event to node\r\n        if (tId.length > 0) {\r\n          node = data.getNodeCache(setting, tId);\r\n          switch (nodeEventType) {\r\n            case \"switchNode\":\r\n              var isParent = data.nodeIsParent(setting, node);\r\n              if (!isParent) {\r\n                nodeEventType = \"\";\r\n              } else if (\r\n                tools.eqs(event.type, \"click\") ||\r\n                (tools.eqs(event.type, \"dblclick\") &&\r\n                  tools.apply(\r\n                    setting.view.dblClickExpand,\r\n                    [setting.treeId, node],\r\n                    setting.view.dblClickExpand\r\n                  ))\r\n              ) {\r\n                nodeEventCallback = handler.onSwitchNode;\r\n              } else {\r\n                nodeEventType = \"\";\r\n              }\r\n              break;\r\n            case \"clickNode\":\r\n              nodeEventCallback = handler.onClickNode;\r\n              break;\r\n          }\r\n        }\r\n        // event to zTree\r\n        switch (treeEventType) {\r\n          case \"mousedown\":\r\n            treeEventCallback = handler.onZTreeMousedown;\r\n            break;\r\n          case \"mouseup\":\r\n            treeEventCallback = handler.onZTreeMouseup;\r\n            break;\r\n          case \"dblclick\":\r\n            treeEventCallback = handler.onZTreeDblclick;\r\n            break;\r\n          case \"contextmenu\":\r\n            treeEventCallback = handler.onZTreeContextmenu;\r\n            break;\r\n        }\r\n        var proxyResult = {\r\n          stop: false,\r\n          node: node,\r\n          nodeEventType: nodeEventType,\r\n          nodeEventCallback: nodeEventCallback,\r\n          treeEventType: treeEventType,\r\n          treeEventCallback: treeEventCallback\r\n        };\r\n        return proxyResult;\r\n      },\r\n      //default init node of core\r\n      _initNode = function(\r\n        setting,\r\n        level,\r\n        n,\r\n        parentNode,\r\n        isFirstNode,\r\n        isLastNode,\r\n        openFlag\r\n      ) {\r\n        if (!n) return;\r\n        var r = data.getRoot(setting),\r\n          children = data.nodeChildren(setting, n);\r\n        n.level = level;\r\n        n.tId = setting.treeId + \"_\" + ++r.zId;\r\n        n.parentTId = parentNode ? parentNode.tId : null;\r\n        n.open =\r\n          typeof n.open == \"string\" ? tools.eqs(n.open, \"true\") : !!n.open;\r\n        var isParent = data.nodeIsParent(setting, n);\r\n        if (\r\n          tools.isArray(children) &&\r\n          !(\r\n            isParent === false ||\r\n            (typeof isParent == \"string\" && tools.eqs(isParent, \"false\"))\r\n          )\r\n        ) {\r\n          data.nodeIsParent(setting, n, true);\r\n          n.zAsync = true;\r\n        } else {\r\n          isParent = data.nodeIsParent(setting, n, isParent);\r\n          n.open = isParent && !setting.async.enable ? n.open : false;\r\n          n.zAsync = !isParent;\r\n        }\r\n        n.isFirstNode = isFirstNode;\r\n        n.isLastNode = isLastNode;\r\n        n.getParentNode = function() {\r\n          return data.getNodeCache(setting, n.parentTId);\r\n        };\r\n        n.getPreNode = function() {\r\n          return data.getPreNode(setting, n);\r\n        };\r\n        n.getNextNode = function() {\r\n          return data.getNextNode(setting, n);\r\n        };\r\n        n.getIndex = function() {\r\n          return data.getNodeIndex(setting, n);\r\n        };\r\n        n.getPath = function() {\r\n          return data.getNodePath(setting, n);\r\n        };\r\n        n.isAjaxing = false;\r\n        data.fixPIdKeyValue(setting, n);\r\n      },\r\n      _init = {\r\n        bind: [_bindEvent],\r\n        unbind: [_unbindEvent],\r\n        caches: [_initCache],\r\n        nodes: [_initNode],\r\n        proxys: [_eventProxy],\r\n        roots: [_initRoot],\r\n        beforeA: [],\r\n        afterA: [],\r\n        innerBeforeA: [],\r\n        innerAfterA: [],\r\n        zTreeTools: []\r\n      },\r\n      //method of operate data\r\n      data = {\r\n        addNodeCache: function(setting, node) {\r\n          data.getCache(setting).nodes[data.getNodeCacheId(node.tId)] = node;\r\n        },\r\n        getNodeCacheId: function(tId) {\r\n          return tId.substring(tId.lastIndexOf(\"_\") + 1);\r\n        },\r\n        addAfterA: function(afterA) {\r\n          _init.afterA.push(afterA);\r\n        },\r\n        addBeforeA: function(beforeA) {\r\n          _init.beforeA.push(beforeA);\r\n        },\r\n        addInnerAfterA: function(innerAfterA) {\r\n          _init.innerAfterA.push(innerAfterA);\r\n        },\r\n        addInnerBeforeA: function(innerBeforeA) {\r\n          _init.innerBeforeA.push(innerBeforeA);\r\n        },\r\n        addInitBind: function(bindEvent) {\r\n          _init.bind.push(bindEvent);\r\n        },\r\n        addInitUnBind: function(unbindEvent) {\r\n          _init.unbind.push(unbindEvent);\r\n        },\r\n        addInitCache: function(initCache) {\r\n          _init.caches.push(initCache);\r\n        },\r\n        addInitNode: function(initNode) {\r\n          _init.nodes.push(initNode);\r\n        },\r\n        addInitProxy: function(initProxy, isFirst) {\r\n          if (!!isFirst) {\r\n            _init.proxys.splice(0, 0, initProxy);\r\n          } else {\r\n            _init.proxys.push(initProxy);\r\n          }\r\n        },\r\n        addInitRoot: function(initRoot) {\r\n          _init.roots.push(initRoot);\r\n        },\r\n        addNodesData: function(setting, parentNode, index, nodes) {\r\n          var children = data.nodeChildren(setting, parentNode),\r\n            params;\r\n          if (!children) {\r\n            children = data.nodeChildren(setting, parentNode, []);\r\n            index = -1;\r\n          } else if (index >= children.length) {\r\n            index = -1;\r\n          }\r\n\r\n          if (children.length > 0 && index === 0) {\r\n            children[0].isFirstNode = false;\r\n            view.setNodeLineIcos(setting, children[0]);\r\n          } else if (children.length > 0 && index < 0) {\r\n            children[children.length - 1].isLastNode = false;\r\n            view.setNodeLineIcos(setting, children[children.length - 1]);\r\n          }\r\n          data.nodeIsParent(setting, parentNode, true);\r\n\r\n          if (index < 0) {\r\n            data.nodeChildren(setting, parentNode, children.concat(nodes));\r\n          } else {\r\n            params = [index, 0].concat(nodes);\r\n            children.splice.apply(children, params);\r\n          }\r\n        },\r\n        addSelectedNode: function(setting, node) {\r\n          var root = data.getRoot(setting);\r\n          if (!data.isSelectedNode(setting, node)) {\r\n            root.curSelectedList.push(node);\r\n          }\r\n        },\r\n        addCreatedNode: function(setting, node) {\r\n          if (!!setting.callback.onNodeCreated || !!setting.view.addDiyDom) {\r\n            var root = data.getRoot(setting);\r\n            root.createdNodes.push(node);\r\n          }\r\n        },\r\n        addZTreeTools: function(zTreeTools) {\r\n          _init.zTreeTools.push(zTreeTools);\r\n        },\r\n        exSetting: function(s) {\r\n          $.extend(true, _setting, s);\r\n        },\r\n        fixPIdKeyValue: function(setting, node) {\r\n          if (setting.data.simpleData.enable) {\r\n            node[setting.data.simpleData.pIdKey] = node.parentTId\r\n              ? node.getParentNode()[setting.data.simpleData.idKey]\r\n              : setting.data.simpleData.rootPId;\r\n          }\r\n        },\r\n        getAfterA: function(setting, node, array) {\r\n          for (var i = 0, j = _init.afterA.length; i < j; i++) {\r\n            _init.afterA[i].apply(this, arguments);\r\n          }\r\n        },\r\n        getBeforeA: function(setting, node, array) {\r\n          for (var i = 0, j = _init.beforeA.length; i < j; i++) {\r\n            _init.beforeA[i].apply(this, arguments);\r\n          }\r\n        },\r\n        getInnerAfterA: function(setting, node, array) {\r\n          for (var i = 0, j = _init.innerAfterA.length; i < j; i++) {\r\n            _init.innerAfterA[i].apply(this, arguments);\r\n          }\r\n        },\r\n        getInnerBeforeA: function(setting, node, array) {\r\n          for (var i = 0, j = _init.innerBeforeA.length; i < j; i++) {\r\n            _init.innerBeforeA[i].apply(this, arguments);\r\n          }\r\n        },\r\n        getCache: function(setting) {\r\n          return caches[setting.treeId];\r\n        },\r\n        getNodeIndex: function(setting, node) {\r\n          if (!node) return null;\r\n          var p = node.parentTId ? node.getParentNode() : data.getRoot(setting),\r\n            children = data.nodeChildren(setting, p);\r\n          for (var i = 0, l = children.length - 1; i <= l; i++) {\r\n            if (children[i] === node) {\r\n              return i;\r\n            }\r\n          }\r\n          return -1;\r\n        },\r\n        getNextNode: function(setting, node) {\r\n          if (!node) return null;\r\n          var p = node.parentTId ? node.getParentNode() : data.getRoot(setting),\r\n            children = data.nodeChildren(setting, p);\r\n          for (var i = 0, l = children.length - 1; i <= l; i++) {\r\n            if (children[i] === node) {\r\n              return i == l ? null : children[i + 1];\r\n            }\r\n          }\r\n          return null;\r\n        },\r\n        getNodeByParam: function(setting, nodes, key, value) {\r\n          if (!nodes || !key) return null;\r\n          for (var i = 0, l = nodes.length; i < l; i++) {\r\n            var node = nodes[i];\r\n            if (node[key] == value) {\r\n              return nodes[i];\r\n            }\r\n            var children = data.nodeChildren(setting, node);\r\n            var tmp = data.getNodeByParam(setting, children, key, value);\r\n            if (tmp) return tmp;\r\n          }\r\n          return null;\r\n        },\r\n        getNodeCache: function(setting, tId) {\r\n          if (!tId) return null;\r\n          var n = caches[setting.treeId].nodes[data.getNodeCacheId(tId)];\r\n          return n ? n : null;\r\n        },\r\n        getNodePath: function(setting, node) {\r\n          if (!node) return null;\r\n\r\n          var path;\r\n          if (node.parentTId) {\r\n            path = node.getParentNode().getPath();\r\n          } else {\r\n            path = [];\r\n          }\r\n\r\n          if (path) {\r\n            path.push(node);\r\n          }\r\n\r\n          return path;\r\n        },\r\n        getNodes: function(setting) {\r\n          return data.nodeChildren(setting, data.getRoot(setting));\r\n        },\r\n        getNodesByParam: function(setting, nodes, key, value) {\r\n          if (!nodes || !key) return [];\r\n          var result = [];\r\n          for (var i = 0, l = nodes.length; i < l; i++) {\r\n            var node = nodes[i];\r\n            if (node[key] == value) {\r\n              result.push(node);\r\n            }\r\n            var children = data.nodeChildren(setting, node);\r\n            result = result.concat(\r\n              data.getNodesByParam(setting, children, key, value)\r\n            );\r\n          }\r\n          return result;\r\n        },\r\n        getNodesByParamFuzzy: function(setting, nodes, key, value) {\r\n          if (!nodes || !key) return [];\r\n          var result = [];\r\n          value = value.toLowerCase();\r\n          for (var i = 0, l = nodes.length; i < l; i++) {\r\n            var node = nodes[i];\r\n            if (\r\n              typeof node[key] == \"string\" &&\r\n              nodes[i][key].toLowerCase().indexOf(value) > -1\r\n            ) {\r\n              result.push(node);\r\n            }\r\n            var children = data.nodeChildren(setting, node);\r\n            result = result.concat(\r\n              data.getNodesByParamFuzzy(setting, children, key, value)\r\n            );\r\n          }\r\n          return result;\r\n        },\r\n        getNodesByFilter: function(\r\n          setting,\r\n          nodes,\r\n          filter,\r\n          isSingle,\r\n          invokeParam\r\n        ) {\r\n          if (!nodes) return isSingle ? null : [];\r\n          var result = isSingle ? null : [];\r\n          for (var i = 0, l = nodes.length; i < l; i++) {\r\n            var node = nodes[i];\r\n            if (tools.apply(filter, [node, invokeParam], false)) {\r\n              if (isSingle) {\r\n                return node;\r\n              }\r\n              result.push(node);\r\n            }\r\n            var children = data.nodeChildren(setting, node);\r\n            var tmpResult = data.getNodesByFilter(\r\n              setting,\r\n              children,\r\n              filter,\r\n              isSingle,\r\n              invokeParam\r\n            );\r\n            if (isSingle && !!tmpResult) {\r\n              return tmpResult;\r\n            }\r\n            result = isSingle ? tmpResult : result.concat(tmpResult);\r\n          }\r\n          return result;\r\n        },\r\n        getPreNode: function(setting, node) {\r\n          if (!node) return null;\r\n          var p = node.parentTId ? node.getParentNode() : data.getRoot(setting),\r\n            children = data.nodeChildren(setting, p);\r\n          for (var i = 0, l = children.length; i < l; i++) {\r\n            if (children[i] === node) {\r\n              return i == 0 ? null : children[i - 1];\r\n            }\r\n          }\r\n          return null;\r\n        },\r\n        getRoot: function(setting) {\r\n          return setting ? roots[setting.treeId] : null;\r\n        },\r\n        getRoots: function() {\r\n          return roots;\r\n        },\r\n        getSetting: function(treeId) {\r\n          return settings[treeId];\r\n        },\r\n        getSettings: function() {\r\n          return settings;\r\n        },\r\n        getZTreeTools: function(treeId) {\r\n          var r = this.getRoot(this.getSetting(treeId));\r\n          return r ? r.treeTools : null;\r\n        },\r\n        initCache: function(setting) {\r\n          for (var i = 0, j = _init.caches.length; i < j; i++) {\r\n            _init.caches[i].apply(this, arguments);\r\n          }\r\n        },\r\n        initNode: function(\r\n          setting,\r\n          level,\r\n          node,\r\n          parentNode,\r\n          preNode,\r\n          nextNode\r\n        ) {\r\n          for (var i = 0, j = _init.nodes.length; i < j; i++) {\r\n            _init.nodes[i].apply(this, arguments);\r\n          }\r\n        },\r\n        initRoot: function(setting) {\r\n          for (var i = 0, j = _init.roots.length; i < j; i++) {\r\n            _init.roots[i].apply(this, arguments);\r\n          }\r\n        },\r\n        isSelectedNode: function(setting, node) {\r\n          var root = data.getRoot(setting);\r\n          for (var i = 0, j = root.curSelectedList.length; i < j; i++) {\r\n            if (node === root.curSelectedList[i]) return true;\r\n          }\r\n          return false;\r\n        },\r\n        nodeChildren: function(setting, node, newChildren) {\r\n          if (!node) {\r\n            return null;\r\n          }\r\n          var key = setting.data.key.children;\r\n          if (typeof newChildren !== \"undefined\") {\r\n            node[key] = newChildren;\r\n          }\r\n          return node[key];\r\n        },\r\n        nodeIsParent: function(setting, node, newIsParent) {\r\n          if (!node) {\r\n            return false;\r\n          }\r\n          var key = setting.data.key.isParent;\r\n          if (typeof newIsParent !== \"undefined\") {\r\n            if (typeof newIsParent === \"string\") {\r\n              newIsParent = tools.eqs(newIsParent, \"true\");\r\n            }\r\n            newIsParent = !!newIsParent;\r\n            node[key] = newIsParent;\r\n          }\r\n          return node[key];\r\n        },\r\n        nodeName: function(setting, node, newName) {\r\n          var key = setting.data.key.name;\r\n          if (typeof newName !== \"undefined\") {\r\n            node[key] = newName;\r\n          }\r\n          return \"\" + node[key];\r\n        },\r\n        nodeTitle: function(setting, node) {\r\n          var t =\r\n            setting.data.key.title === \"\"\r\n              ? setting.data.key.name\r\n              : setting.data.key.title;\r\n          return \"\" + node[t];\r\n        },\r\n        removeNodeCache: function(setting, node) {\r\n          var children = data.nodeChildren(setting, node);\r\n          if (children) {\r\n            for (var i = 0, l = children.length; i < l; i++) {\r\n              data.removeNodeCache(setting, children[i]);\r\n            }\r\n          }\r\n          data.getCache(setting).nodes[data.getNodeCacheId(node.tId)] = null;\r\n        },\r\n        removeSelectedNode: function(setting, node) {\r\n          var root = data.getRoot(setting);\r\n          for (var i = 0, j = root.curSelectedList.length; i < j; i++) {\r\n            if (\r\n              node === root.curSelectedList[i] ||\r\n              !data.getNodeCache(setting, root.curSelectedList[i].tId)\r\n            ) {\r\n              root.curSelectedList.splice(i, 1);\r\n              setting.treeObj.trigger(consts.event.UNSELECTED, [\r\n                setting.treeId,\r\n                node\r\n              ]);\r\n              i--;\r\n              j--;\r\n            }\r\n          }\r\n        },\r\n        setCache: function(setting, cache) {\r\n          caches[setting.treeId] = cache;\r\n        },\r\n        setRoot: function(setting, root) {\r\n          roots[setting.treeId] = root;\r\n        },\r\n        setZTreeTools: function(setting, zTreeTools) {\r\n          for (var i = 0, j = _init.zTreeTools.length; i < j; i++) {\r\n            _init.zTreeTools[i].apply(this, arguments);\r\n          }\r\n        },\r\n        transformToArrayFormat: function(setting, nodes) {\r\n          if (!nodes) return [];\r\n          var r = [];\r\n          if (tools.isArray(nodes)) {\r\n            for (var i = 0, l = nodes.length; i < l; i++) {\r\n              var node = nodes[i];\r\n              _do(node);\r\n            }\r\n          } else {\r\n            _do(nodes);\r\n          }\r\n          return r;\r\n\r\n          function _do(_node) {\r\n            r.push(_node);\r\n            var children = data.nodeChildren(setting, _node);\r\n            if (children) {\r\n              r = r.concat(data.transformToArrayFormat(setting, children));\r\n            }\r\n          }\r\n        },\r\n        transformTozTreeFormat: function(setting, sNodes) {\r\n          var i,\r\n            l,\r\n            key = setting.data.simpleData.idKey,\r\n            parentKey = setting.data.simpleData.pIdKey;\r\n          if (!key || key == \"\" || !sNodes) return [];\r\n\r\n          if (tools.isArray(sNodes)) {\r\n            var r = [];\r\n            var tmpMap = {};\r\n            for (i = 0, l = sNodes.length; i < l; i++) {\r\n              tmpMap[sNodes[i][key]] = sNodes[i];\r\n            }\r\n            for (i = 0, l = sNodes.length; i < l; i++) {\r\n              var p = tmpMap[sNodes[i][parentKey]];\r\n              if (p && sNodes[i][key] != sNodes[i][parentKey]) {\r\n                var children = data.nodeChildren(setting, p);\r\n                if (!children) {\r\n                  children = data.nodeChildren(setting, p, []);\r\n                }\r\n                children.push(sNodes[i]);\r\n              } else {\r\n                r.push(sNodes[i]);\r\n              }\r\n            }\r\n            return r;\r\n          } else {\r\n            return [sNodes];\r\n          }\r\n        }\r\n      },\r\n      //method of event proxy\r\n      event = {\r\n        bindEvent: function(setting) {\r\n          for (var i = 0, j = _init.bind.length; i < j; i++) {\r\n            _init.bind[i].apply(this, arguments);\r\n          }\r\n        },\r\n        unbindEvent: function(setting) {\r\n          for (var i = 0, j = _init.unbind.length; i < j; i++) {\r\n            _init.unbind[i].apply(this, arguments);\r\n          }\r\n        },\r\n        bindTree: function(setting) {\r\n          var eventParam = {\r\n              treeId: setting.treeId\r\n            },\r\n            o = setting.treeObj;\r\n          if (!setting.view.txtSelectedEnable) {\r\n            // for can't select text\r\n            o.bind(\"selectstart\", handler.onSelectStart).css({\r\n              \"-moz-user-select\": \"-moz-none\"\r\n            });\r\n          }\r\n          o.bind(\"click\", eventParam, event.proxy);\r\n          o.bind(\"dblclick\", eventParam, event.proxy);\r\n          o.bind(\"mouseover\", eventParam, event.proxy);\r\n          o.bind(\"mouseout\", eventParam, event.proxy);\r\n          o.bind(\"mousedown\", eventParam, event.proxy);\r\n          o.bind(\"mouseup\", eventParam, event.proxy);\r\n          o.bind(\"contextmenu\", eventParam, event.proxy);\r\n        },\r\n        unbindTree: function(setting) {\r\n          var o = setting.treeObj;\r\n          o.unbind(\"selectstart\", handler.onSelectStart)\r\n            .unbind(\"click\", event.proxy)\r\n            .unbind(\"dblclick\", event.proxy)\r\n            .unbind(\"mouseover\", event.proxy)\r\n            .unbind(\"mouseout\", event.proxy)\r\n            .unbind(\"mousedown\", event.proxy)\r\n            .unbind(\"mouseup\", event.proxy)\r\n            .unbind(\"contextmenu\", event.proxy);\r\n        },\r\n        doProxy: function(e) {\r\n          var results = [];\r\n          for (var i = 0, j = _init.proxys.length; i < j; i++) {\r\n            var proxyResult = _init.proxys[i].apply(this, arguments);\r\n            results.push(proxyResult);\r\n            if (proxyResult.stop) {\r\n              break;\r\n            }\r\n          }\r\n          return results;\r\n        },\r\n        proxy: function(e) {\r\n          var setting = data.getSetting(e.data.treeId);\r\n          if (!tools.uCanDo(setting, e)) return true;\r\n          var results = event.doProxy(e),\r\n            r = true,\r\n            x = false;\r\n          for (var i = 0, l = results.length; i < l; i++) {\r\n            var proxyResult = results[i];\r\n            if (proxyResult.nodeEventCallback) {\r\n              x = true;\r\n              r =\r\n                proxyResult.nodeEventCallback.apply(proxyResult, [\r\n                  e,\r\n                  proxyResult.node\r\n                ]) && r;\r\n            }\r\n            if (proxyResult.treeEventCallback) {\r\n              x = true;\r\n              r =\r\n                proxyResult.treeEventCallback.apply(proxyResult, [\r\n                  e,\r\n                  proxyResult.node\r\n                ]) && r;\r\n            }\r\n          }\r\n          return r;\r\n        }\r\n      },\r\n      //method of event handler\r\n      handler = {\r\n        onSwitchNode: function(event, node) {\r\n          var setting = data.getSetting(event.data.treeId);\r\n          if (node.open) {\r\n            if (\r\n              tools.apply(\r\n                setting.callback.beforeCollapse,\r\n                [setting.treeId, node],\r\n                true\r\n              ) == false\r\n            )\r\n              return true;\r\n            data.getRoot(setting).expandTriggerFlag = true;\r\n            view.switchNode(setting, node);\r\n          } else {\r\n            if (\r\n              tools.apply(\r\n                setting.callback.beforeExpand,\r\n                [setting.treeId, node],\r\n                true\r\n              ) == false\r\n            )\r\n              return true;\r\n            data.getRoot(setting).expandTriggerFlag = true;\r\n            view.switchNode(setting, node);\r\n          }\r\n          return true;\r\n        },\r\n        onClickNode: function(event, node) {\r\n          var setting = data.getSetting(event.data.treeId),\r\n            clickFlag =\r\n              setting.view.autoCancelSelected &&\r\n              (event.ctrlKey || event.metaKey) &&\r\n              data.isSelectedNode(setting, node)\r\n                ? 0\r\n                : setting.view.autoCancelSelected &&\r\n                  (event.ctrlKey || event.metaKey) &&\r\n                  setting.view.selectedMulti\r\n                  ? 2\r\n                  : 1;\r\n          if (\r\n            tools.apply(\r\n              setting.callback.beforeClick,\r\n              [setting.treeId, node, clickFlag],\r\n              true\r\n            ) == false\r\n          )\r\n            return true;\r\n          if (clickFlag === 0) {\r\n            view.cancelPreSelectedNode(setting, node);\r\n          } else {\r\n            view.selectNode(setting, node, clickFlag === 2);\r\n          }\r\n          setting.treeObj.trigger(consts.event.CLICK, [\r\n            event,\r\n            setting.treeId,\r\n            node,\r\n            clickFlag\r\n          ]);\r\n          return true;\r\n        },\r\n        onZTreeMousedown: function(event, node) {\r\n          var setting = data.getSetting(event.data.treeId);\r\n          if (\r\n            tools.apply(\r\n              setting.callback.beforeMouseDown,\r\n              [setting.treeId, node],\r\n              true\r\n            )\r\n          ) {\r\n            tools.apply(setting.callback.onMouseDown, [\r\n              event,\r\n              setting.treeId,\r\n              node\r\n            ]);\r\n          }\r\n          return true;\r\n        },\r\n        onZTreeMouseup: function(event, node) {\r\n          var setting = data.getSetting(event.data.treeId);\r\n          if (\r\n            tools.apply(\r\n              setting.callback.beforeMouseUp,\r\n              [setting.treeId, node],\r\n              true\r\n            )\r\n          ) {\r\n            tools.apply(setting.callback.onMouseUp, [\r\n              event,\r\n              setting.treeId,\r\n              node\r\n            ]);\r\n          }\r\n          return true;\r\n        },\r\n        onZTreeDblclick: function(event, node) {\r\n          var setting = data.getSetting(event.data.treeId);\r\n          if (\r\n            tools.apply(\r\n              setting.callback.beforeDblClick,\r\n              [setting.treeId, node],\r\n              true\r\n            )\r\n          ) {\r\n            tools.apply(setting.callback.onDblClick, [\r\n              event,\r\n              setting.treeId,\r\n              node\r\n            ]);\r\n          }\r\n          return true;\r\n        },\r\n        onZTreeContextmenu: function(event, node) {\r\n          var setting = data.getSetting(event.data.treeId);\r\n          if (\r\n            tools.apply(\r\n              setting.callback.beforeRightClick,\r\n              [setting.treeId, node],\r\n              true\r\n            )\r\n          ) {\r\n            tools.apply(setting.callback.onRightClick, [\r\n              event,\r\n              setting.treeId,\r\n              node\r\n            ]);\r\n          }\r\n          return typeof setting.callback.onRightClick != \"function\";\r\n        },\r\n        onSelectStart: function(e) {\r\n          var n = e.originalEvent.srcElement.nodeName.toLowerCase();\r\n          return n === \"input\" || n === \"textarea\";\r\n        }\r\n      },\r\n      //method of tools for zTree\r\n      tools = {\r\n        apply: function(fun, param, defaultValue) {\r\n          if (typeof fun == \"function\") {\r\n            return fun.apply(zt, param ? param : []);\r\n          }\r\n          return defaultValue;\r\n        },\r\n        canAsync: function(setting, node) {\r\n          var children = data.nodeChildren(setting, node);\r\n          var isParent = data.nodeIsParent(setting, node);\r\n          return (\r\n            setting.async.enable &&\r\n            node &&\r\n            isParent &&\r\n            !(node.zAsync || (children && children.length > 0))\r\n          );\r\n        },\r\n        clone: function(obj) {\r\n          if (obj === null) return null;\r\n          var o = tools.isArray(obj) ? [] : {};\r\n          for (var i in obj) {\r\n            o[i] =\r\n              obj[i] instanceof Date\r\n                ? new Date(obj[i].getTime())\r\n                : typeof obj[i] === \"object\"\r\n                  ? tools.clone(obj[i])\r\n                  : obj[i];\r\n          }\r\n          return o;\r\n        },\r\n        eqs: function(str1, str2) {\r\n          return str1.toLowerCase() === str2.toLowerCase();\r\n        },\r\n        isArray: function(arr) {\r\n          return Object.prototype.toString.apply(arr) === \"[object Array]\";\r\n        },\r\n        isElement: function(o) {\r\n          return typeof HTMLElement === \"object\"\r\n            ? o instanceof HTMLElement //DOM2\r\n            : o &&\r\n                typeof o === \"object\" &&\r\n                o !== null &&\r\n                o.nodeType === 1 &&\r\n                typeof o.nodeName === \"string\";\r\n        },\r\n        $: function(node, exp, setting) {\r\n          if (!!exp && typeof exp != \"string\") {\r\n            setting = exp;\r\n            exp = \"\";\r\n          }\r\n          if (typeof node == \"string\") {\r\n            return $(\r\n              node,\r\n              setting ? setting.treeObj.get(0).ownerDocument : null\r\n            );\r\n          } else {\r\n            return $(\"#\" + node.tId + exp, setting ? setting.treeObj : null);\r\n          }\r\n        },\r\n        getMDom: function(setting, curDom, targetExpr) {\r\n          if (!curDom) return null;\r\n          while (curDom && curDom.id !== setting.treeId) {\r\n            for (\r\n              var i = 0, l = targetExpr.length;\r\n              curDom.tagName && i < l;\r\n              i++\r\n            ) {\r\n              if (\r\n                tools.eqs(curDom.tagName, targetExpr[i].tagName) &&\r\n                curDom.getAttribute(targetExpr[i].attrName) !== null\r\n              ) {\r\n                return curDom;\r\n              }\r\n            }\r\n            curDom = curDom.parentNode;\r\n          }\r\n          return null;\r\n        },\r\n        getNodeMainDom: function(target) {\r\n          return (\r\n            $(target)\r\n              .parent(\"li\")\r\n              .get(0) ||\r\n            $(target)\r\n              .parentsUntil(\"li\")\r\n              .parent()\r\n              .get(0)\r\n          );\r\n        },\r\n        isChildOrSelf: function(dom, parentId) {\r\n          return $(dom).closest(\"#\" + parentId).length > 0;\r\n        },\r\n        uCanDo: function(setting, e) {\r\n          return true;\r\n        }\r\n      },\r\n      //method of operate ztree dom\r\n      view = {\r\n        addNodes: function(setting, parentNode, index, newNodes, isSilent) {\r\n          var isParent = data.nodeIsParent(setting, parentNode);\r\n          if (setting.data.keep.leaf && parentNode && !isParent) {\r\n            return;\r\n          }\r\n          if (!tools.isArray(newNodes)) {\r\n            newNodes = [newNodes];\r\n          }\r\n          if (setting.data.simpleData.enable) {\r\n            newNodes = data.transformTozTreeFormat(setting, newNodes);\r\n          }\r\n          if (parentNode) {\r\n            var target_switchObj = $$(parentNode, consts.id.SWITCH, setting),\r\n              target_icoObj = $$(parentNode, consts.id.ICON, setting),\r\n              target_ulObj = $$(parentNode, consts.id.UL, setting);\r\n\r\n            if (!parentNode.open) {\r\n              view.replaceSwitchClass(\r\n                parentNode,\r\n                target_switchObj,\r\n                consts.folder.CLOSE\r\n              );\r\n              view.replaceIcoClass(\r\n                parentNode,\r\n                target_icoObj,\r\n                consts.folder.CLOSE\r\n              );\r\n              parentNode.open = false;\r\n              target_ulObj.css({\r\n                display: \"none\"\r\n              });\r\n            }\r\n\r\n            data.addNodesData(setting, parentNode, index, newNodes);\r\n            view.createNodes(\r\n              setting,\r\n              parentNode.level + 1,\r\n              newNodes,\r\n              parentNode,\r\n              index\r\n            );\r\n            if (!isSilent) {\r\n              view.expandCollapseParentNode(setting, parentNode, true);\r\n            }\r\n          } else {\r\n            data.addNodesData(setting, data.getRoot(setting), index, newNodes);\r\n            view.createNodes(setting, 0, newNodes, null, index);\r\n          }\r\n        },\r\n        appendNodes: function(\r\n          setting,\r\n          level,\r\n          nodes,\r\n          parentNode,\r\n          index,\r\n          initFlag,\r\n          openFlag\r\n        ) {\r\n          if (!nodes) return [];\r\n          var html = [];\r\n\r\n          var tmpPNode = parentNode ? parentNode : data.getRoot(setting),\r\n            tmpPChild = data.nodeChildren(setting, tmpPNode),\r\n            isFirstNode,\r\n            isLastNode;\r\n\r\n          if (!tmpPChild || index >= tmpPChild.length - nodes.length) {\r\n            index = -1;\r\n          }\r\n\r\n          for (var i = 0, l = nodes.length; i < l; i++) {\r\n            var node = nodes[i];\r\n            if (initFlag) {\r\n              isFirstNode =\r\n                (index === 0 || tmpPChild.length == nodes.length) && i == 0;\r\n              isLastNode = index < 0 && i == nodes.length - 1;\r\n              data.initNode(\r\n                setting,\r\n                level,\r\n                node,\r\n                parentNode,\r\n                isFirstNode,\r\n                isLastNode,\r\n                openFlag\r\n              );\r\n              data.addNodeCache(setting, node);\r\n            }\r\n            var isParent = data.nodeIsParent(setting, node);\r\n\r\n            var childHtml = [];\r\n            var children = data.nodeChildren(setting, node);\r\n            if (children && children.length > 0) {\r\n              //make child html first, because checkType\r\n              childHtml = view.appendNodes(\r\n                setting,\r\n                level + 1,\r\n                children,\r\n                node,\r\n                -1,\r\n                initFlag,\r\n                openFlag && node.open\r\n              );\r\n            }\r\n            if (openFlag) {\r\n              view.makeDOMNodeMainBefore(html, setting, node);\r\n              view.makeDOMNodeLine(html, setting, node);\r\n              data.getBeforeA(setting, node, html);\r\n              view.makeDOMNodeNameBefore(html, setting, node);\r\n              data.getInnerBeforeA(setting, node, html);\r\n              view.makeDOMNodeIcon(html, setting, node);\r\n              data.getInnerAfterA(setting, node, html);\r\n              view.makeDOMNodeNameAfter(html, setting, node);\r\n              data.getAfterA(setting, node, html);\r\n              if (isParent && node.open) {\r\n                view.makeUlHtml(setting, node, html, childHtml.join(\"\"));\r\n              }\r\n              view.makeDOMNodeMainAfter(html, setting, node);\r\n              data.addCreatedNode(setting, node);\r\n            }\r\n          }\r\n          return html;\r\n        },\r\n        appendParentULDom: function(setting, node) {\r\n          var html = [],\r\n            nObj = $$(node, setting);\r\n          if (!nObj.get(0) && !!node.parentTId) {\r\n            view.appendParentULDom(setting, node.getParentNode());\r\n            nObj = $$(node, setting);\r\n          }\r\n          var ulObj = $$(node, consts.id.UL, setting);\r\n          if (ulObj.get(0)) {\r\n            ulObj.remove();\r\n          }\r\n          var children = data.nodeChildren(setting, node),\r\n            childHtml = view.appendNodes(\r\n              setting,\r\n              node.level + 1,\r\n              children,\r\n              node,\r\n              -1,\r\n              false,\r\n              true\r\n            );\r\n          view.makeUlHtml(setting, node, html, childHtml.join(\"\"));\r\n          nObj.append(html.join(\"\"));\r\n        },\r\n        asyncNode: function(setting, node, isSilent, callback) {\r\n          var i, l;\r\n          var isParent = data.nodeIsParent(setting, node);\r\n          if (node && !isParent) {\r\n            tools.apply(callback);\r\n            return false;\r\n          } else if (node && node.isAjaxing) {\r\n            return false;\r\n          } else if (\r\n            tools.apply(\r\n              setting.callback.beforeAsync,\r\n              [setting.treeId, node],\r\n              true\r\n            ) == false\r\n          ) {\r\n            tools.apply(callback);\r\n            return false;\r\n          }\r\n          if (node) {\r\n            node.isAjaxing = true;\r\n            var icoObj = $$(node, consts.id.ICON, setting);\r\n            icoObj.attr({\r\n              style: \"\",\r\n              class:\r\n                consts.className.BUTTON + \" \" + consts.className.ICO_LOADING\r\n            });\r\n          }\r\n\r\n          var tmpParam = {};\r\n          var autoParam = tools.apply(\r\n            setting.async.autoParam,\r\n            [setting.treeId, node],\r\n            setting.async.autoParam\r\n          );\r\n          for (i = 0, l = autoParam.length; node && i < l; i++) {\r\n            var pKey = autoParam[i].split(\"=\"),\r\n              spKey = pKey;\r\n            if (pKey.length > 1) {\r\n              spKey = pKey[1];\r\n              pKey = pKey[0];\r\n            }\r\n            tmpParam[spKey] = node[pKey];\r\n          }\r\n          var otherParam = tools.apply(\r\n            setting.async.otherParam,\r\n            [setting.treeId, node],\r\n            setting.async.otherParam\r\n          );\r\n          if (tools.isArray(otherParam)) {\r\n            for (i = 0, l = otherParam.length; i < l; i += 2) {\r\n              tmpParam[otherParam[i]] = otherParam[i + 1];\r\n            }\r\n          } else {\r\n            for (var p in otherParam) {\r\n              tmpParam[p] = otherParam[p];\r\n            }\r\n          }\r\n\r\n          var _tmpV = data.getRoot(setting)._ver;\r\n          $.ajax({\r\n            contentType: setting.async.contentType,\r\n            cache: false,\r\n            type: setting.async.type,\r\n            url: tools.apply(\r\n              setting.async.url,\r\n              [setting.treeId, node],\r\n              setting.async.url\r\n            ),\r\n            data:\r\n              setting.async.contentType.indexOf(\"application/json\") > -1\r\n                ? JSON.stringify(tmpParam)\r\n                : tmpParam,\r\n            dataType: setting.async.dataType,\r\n            headers: setting.async.headers,\r\n            xhrFields: setting.async.xhrFields,\r\n            success: function(msg) {\r\n              if (_tmpV != data.getRoot(setting)._ver) {\r\n                return;\r\n              }\r\n              var newNodes = [];\r\n              try {\r\n                if (!msg || msg.length == 0) {\r\n                  newNodes = [];\r\n                } else if (typeof msg == \"string\") {\r\n                  newNodes = eval(\"(\" + msg + \")\");\r\n                } else {\r\n                  newNodes = msg;\r\n                }\r\n              } catch (err) {\r\n                newNodes = msg;\r\n              }\r\n\r\n              if (node) {\r\n                node.isAjaxing = null;\r\n                node.zAsync = true;\r\n              }\r\n              view.setNodeLineIcos(setting, node);\r\n              if (newNodes && newNodes !== \"\") {\r\n                newNodes = tools.apply(\r\n                  setting.async.dataFilter,\r\n                  [setting.treeId, node, newNodes],\r\n                  newNodes\r\n                );\r\n                view.addNodes(\r\n                  setting,\r\n                  node,\r\n                  -1,\r\n                  !!newNodes ? tools.clone(newNodes) : [],\r\n                  !!isSilent\r\n                );\r\n              } else {\r\n                view.addNodes(setting, node, -1, [], !!isSilent);\r\n              }\r\n              setting.treeObj.trigger(consts.event.ASYNC_SUCCESS, [\r\n                setting.treeId,\r\n                node,\r\n                msg\r\n              ]);\r\n              tools.apply(callback);\r\n            },\r\n            error: function(XMLHttpRequest, textStatus, errorThrown) {\r\n              if (_tmpV != data.getRoot(setting)._ver) {\r\n                return;\r\n              }\r\n              if (node) node.isAjaxing = null;\r\n              view.setNodeLineIcos(setting, node);\r\n              setting.treeObj.trigger(consts.event.ASYNC_ERROR, [\r\n                setting.treeId,\r\n                node,\r\n                XMLHttpRequest,\r\n                textStatus,\r\n                errorThrown\r\n              ]);\r\n            }\r\n          });\r\n          return true;\r\n        },\r\n        cancelPreSelectedNode: function(setting, node, excludeNode) {\r\n          var list = data.getRoot(setting).curSelectedList,\r\n            i,\r\n            n;\r\n          for (i = list.length - 1; i >= 0; i--) {\r\n            n = list[i];\r\n            if (node === n || (!node && (!excludeNode || excludeNode !== n))) {\r\n              $$(n, consts.id.A, setting).removeClass(consts.node.CURSELECTED);\r\n              if (node) {\r\n                data.removeSelectedNode(setting, node);\r\n                break;\r\n              } else {\r\n                list.splice(i, 1);\r\n                setting.treeObj.trigger(consts.event.UNSELECTED, [\r\n                  setting.treeId,\r\n                  n\r\n                ]);\r\n              }\r\n            }\r\n          }\r\n        },\r\n        createNodeCallback: function(setting) {\r\n          if (!!setting.callback.onNodeCreated || !!setting.view.addDiyDom) {\r\n            var root = data.getRoot(setting);\r\n            while (root.createdNodes.length > 0) {\r\n              var node = root.createdNodes.shift();\r\n              tools.apply(setting.view.addDiyDom, [setting.treeId, node]);\r\n              if (!!setting.callback.onNodeCreated) {\r\n                setting.treeObj.trigger(consts.event.NODECREATED, [\r\n                  setting.treeId,\r\n                  node\r\n                ]);\r\n              }\r\n            }\r\n          }\r\n        },\r\n        createNodes: function(setting, level, nodes, parentNode, index) {\r\n          if (!nodes || nodes.length == 0) return;\r\n          var root = data.getRoot(setting),\r\n            openFlag =\r\n              !parentNode ||\r\n              parentNode.open ||\r\n              !!$$(data.nodeChildren(setting, parentNode)[0], setting).get(0);\r\n          root.createdNodes = [];\r\n          var zTreeHtml = view.appendNodes(\r\n              setting,\r\n              level,\r\n              nodes,\r\n              parentNode,\r\n              index,\r\n              true,\r\n              openFlag\r\n            ),\r\n            parentObj,\r\n            nextObj;\r\n\r\n          if (!parentNode) {\r\n            parentObj = setting.treeObj;\r\n            //setting.treeObj.append(zTreeHtml.join(''));\r\n          } else {\r\n            var ulObj = $$(parentNode, consts.id.UL, setting);\r\n            if (ulObj.get(0)) {\r\n              parentObj = ulObj;\r\n              //ulObj.append(zTreeHtml.join(''));\r\n            }\r\n          }\r\n          if (parentObj) {\r\n            if (index >= 0) {\r\n              nextObj = parentObj.children()[index];\r\n            }\r\n            if (index >= 0 && nextObj) {\r\n              $(nextObj).before(zTreeHtml.join(\"\"));\r\n            } else {\r\n              parentObj.append(zTreeHtml.join(\"\"));\r\n            }\r\n          }\r\n\r\n          view.createNodeCallback(setting);\r\n        },\r\n        destroy: function(setting) {\r\n          if (!setting) return;\r\n          data.initCache(setting);\r\n          data.initRoot(setting);\r\n          event.unbindTree(setting);\r\n          event.unbindEvent(setting);\r\n          setting.treeObj.empty();\r\n          delete settings[setting.treeId];\r\n        },\r\n        expandCollapseNode: function(\r\n          setting,\r\n          node,\r\n          expandFlag,\r\n          animateFlag,\r\n          callback\r\n        ) {\r\n          var root = data.getRoot(setting);\r\n          var tmpCb, _callback;\r\n          if (!node) {\r\n            tools.apply(callback, []);\r\n            return;\r\n          }\r\n          var children = data.nodeChildren(setting, node);\r\n          var isParent = data.nodeIsParent(setting, node);\r\n          if (root.expandTriggerFlag) {\r\n            _callback = callback;\r\n            tmpCb = function() {\r\n              if (_callback) _callback();\r\n              if (node.open) {\r\n                setting.treeObj.trigger(consts.event.EXPAND, [\r\n                  setting.treeId,\r\n                  node\r\n                ]);\r\n              } else {\r\n                setting.treeObj.trigger(consts.event.COLLAPSE, [\r\n                  setting.treeId,\r\n                  node\r\n                ]);\r\n              }\r\n            };\r\n            callback = tmpCb;\r\n            root.expandTriggerFlag = false;\r\n          }\r\n          if (\r\n            !node.open &&\r\n            isParent &&\r\n            (!$$(node, consts.id.UL, setting).get(0) ||\r\n              (children &&\r\n                children.length > 0 &&\r\n                !$$(children[0], setting).get(0)))\r\n          ) {\r\n            view.appendParentULDom(setting, node);\r\n            view.createNodeCallback(setting);\r\n          }\r\n          if (node.open == expandFlag) {\r\n            tools.apply(callback, []);\r\n            return;\r\n          }\r\n          var ulObj = $$(node, consts.id.UL, setting),\r\n            switchObj = $$(node, consts.id.SWITCH, setting),\r\n            icoObj = $$(node, consts.id.ICON, setting);\r\n\r\n          if (isParent) {\r\n            node.open = !node.open;\r\n            if (node.iconOpen && node.iconClose) {\r\n              icoObj.attr(\"style\", view.makeNodeIcoStyle(setting, node));\r\n            }\r\n\r\n            if (node.open) {\r\n              view.replaceSwitchClass(node, switchObj, consts.folder.OPEN);\r\n              view.replaceIcoClass(node, icoObj, consts.folder.OPEN);\r\n              if (animateFlag == false || setting.view.expandSpeed == \"\") {\r\n                ulObj.show();\r\n                tools.apply(callback, []);\r\n              } else {\r\n                if (children && children.length > 0) {\r\n                  ulObj.slideDown(setting.view.expandSpeed, callback);\r\n                } else {\r\n                  ulObj.show();\r\n                  tools.apply(callback, []);\r\n                }\r\n              }\r\n            } else {\r\n              view.replaceSwitchClass(node, switchObj, consts.folder.CLOSE);\r\n              view.replaceIcoClass(node, icoObj, consts.folder.CLOSE);\r\n              if (\r\n                animateFlag == false ||\r\n                setting.view.expandSpeed == \"\" ||\r\n                !(children && children.length > 0)\r\n              ) {\r\n                ulObj.hide();\r\n                tools.apply(callback, []);\r\n              } else {\r\n                ulObj.slideUp(setting.view.expandSpeed, callback);\r\n              }\r\n            }\r\n          } else {\r\n            tools.apply(callback, []);\r\n          }\r\n        },\r\n        expandCollapseParentNode: function(\r\n          setting,\r\n          node,\r\n          expandFlag,\r\n          animateFlag,\r\n          callback\r\n        ) {\r\n          if (!node) return;\r\n          if (!node.parentTId) {\r\n            view.expandCollapseNode(\r\n              setting,\r\n              node,\r\n              expandFlag,\r\n              animateFlag,\r\n              callback\r\n            );\r\n            return;\r\n          } else {\r\n            view.expandCollapseNode(setting, node, expandFlag, animateFlag);\r\n          }\r\n          if (node.parentTId) {\r\n            view.expandCollapseParentNode(\r\n              setting,\r\n              node.getParentNode(),\r\n              expandFlag,\r\n              animateFlag,\r\n              callback\r\n            );\r\n          }\r\n        },\r\n        expandCollapseSonNode: function(\r\n          setting,\r\n          node,\r\n          expandFlag,\r\n          animateFlag,\r\n          callback\r\n        ) {\r\n          var root = data.getRoot(setting),\r\n            treeNodes = node\r\n              ? data.nodeChildren(setting, node)\r\n              : data.nodeChildren(setting, root),\r\n            selfAnimateSign = node ? false : animateFlag,\r\n            expandTriggerFlag = data.getRoot(setting).expandTriggerFlag;\r\n          data.getRoot(setting).expandTriggerFlag = false;\r\n          if (treeNodes) {\r\n            for (var i = 0, l = treeNodes.length; i < l; i++) {\r\n              if (treeNodes[i])\r\n                view.expandCollapseSonNode(\r\n                  setting,\r\n                  treeNodes[i],\r\n                  expandFlag,\r\n                  selfAnimateSign\r\n                );\r\n            }\r\n          }\r\n          data.getRoot(setting).expandTriggerFlag = expandTriggerFlag;\r\n          view.expandCollapseNode(\r\n            setting,\r\n            node,\r\n            expandFlag,\r\n            animateFlag,\r\n            callback\r\n          );\r\n        },\r\n        isSelectedNode: function(setting, node) {\r\n          if (!node) {\r\n            return false;\r\n          }\r\n          var list = data.getRoot(setting).curSelectedList,\r\n            i;\r\n          for (i = list.length - 1; i >= 0; i--) {\r\n            if (node === list[i]) {\r\n              return true;\r\n            }\r\n          }\r\n          return false;\r\n        },\r\n        makeDOMNodeIcon: function(html, setting, node) {\r\n          var nameStr = data.nodeName(setting, node),\r\n            name = setting.view.nameIsHTML\r\n              ? nameStr\r\n              : nameStr\r\n                  .replace(/&/g, \"&amp;\")\r\n                  .replace(/</g, \"&lt;\")\r\n                  .replace(/>/g, \"&gt;\");\r\n          html.push(\r\n            \"<span id='\",\r\n            node.tId,\r\n            consts.id.ICON,\r\n            \"' title='' treeNode\",\r\n            consts.id.ICON,\r\n            \" class='\",\r\n            view.makeNodeIcoClass(setting, node),\r\n            \"' style='\",\r\n            view.makeNodeIcoStyle(setting, node),\r\n            \"'></span><span id='\",\r\n            node.tId,\r\n            consts.id.SPAN,\r\n            \"' class='\",\r\n            consts.className.NAME,\r\n            \"'>\",\r\n            name,\r\n            \"</span>\"\r\n          );\r\n        },\r\n        makeDOMNodeLine: function(html, setting, node) {\r\n          html.push(\r\n            \"<span id='\",\r\n            node.tId,\r\n            consts.id.SWITCH,\r\n            \"' title='' class='\",\r\n            view.makeNodeLineClass(setting, node),\r\n            \"' treeNode\",\r\n            consts.id.SWITCH,\r\n            \"></span>\"\r\n          );\r\n        },\r\n        makeDOMNodeMainAfter: function(html, setting, node) {\r\n          html.push(\"</li>\");\r\n        },\r\n        makeDOMNodeMainBefore: function(html, setting, node) {\r\n          html.push(\r\n            \"<li id='\",\r\n            node.tId,\r\n            \"' class='\",\r\n            consts.className.LEVEL,\r\n            node.level,\r\n            \"' tabindex='0' hidefocus='true' treenode>\"\r\n          );\r\n        },\r\n        makeDOMNodeNameAfter: function(html, setting, node) {\r\n          html.push(\"</a>\");\r\n        },\r\n        makeDOMNodeNameBefore: function(html, setting, node) {\r\n          var title = data.nodeTitle(setting, node),\r\n            url = view.makeNodeUrl(setting, node),\r\n            fontcss = view.makeNodeFontCss(setting, node),\r\n            fontStyle = [];\r\n          for (var f in fontcss) {\r\n            fontStyle.push(f, \":\", fontcss[f], \";\");\r\n          }\r\n          html.push(\r\n            \"<a id='\",\r\n            node.tId,\r\n            consts.id.A,\r\n            \"' class='\",\r\n            consts.className.LEVEL,\r\n            node.level,\r\n            \"' treeNode\",\r\n            consts.id.A,\r\n            ' onclick=\"',\r\n            node.click || \"\",\r\n            '\" ',\r\n            url != null && url.length > 0 ? \"href='\" + url + \"'\" : \"\",\r\n            \" target='\",\r\n            view.makeNodeTarget(node),\r\n            \"' style='\",\r\n            fontStyle.join(\"\"),\r\n            \"'\"\r\n          );\r\n          if (\r\n            tools.apply(\r\n              setting.view.showTitle,\r\n              [setting.treeId, node],\r\n              setting.view.showTitle\r\n            ) &&\r\n            title\r\n          ) {\r\n            html.push(\r\n              \"title='\",\r\n              title\r\n                .replace(/'/g, \"&#39;\")\r\n                .replace(/</g, \"&lt;\")\r\n                .replace(/>/g, \"&gt;\"),\r\n              \"'\"\r\n            );\r\n          }\r\n          html.push(\">\");\r\n        },\r\n        makeNodeFontCss: function(setting, node) {\r\n          var fontCss = tools.apply(\r\n            setting.view.fontCss,\r\n            [setting.treeId, node],\r\n            setting.view.fontCss\r\n          );\r\n          return fontCss && typeof fontCss != \"function\" ? fontCss : {};\r\n        },\r\n        makeNodeIcoClass: function(setting, node) {\r\n          var icoCss = [\"ico\"];\r\n          if (!node.isAjaxing) {\r\n            var isParent = data.nodeIsParent(setting, node);\r\n            icoCss[0] = (node.iconSkin ? node.iconSkin + \"_\" : \"\") + icoCss[0];\r\n            if (isParent) {\r\n              icoCss.push(node.open ? consts.folder.OPEN : consts.folder.CLOSE);\r\n            } else {\r\n              icoCss.push(consts.folder.DOCU);\r\n            }\r\n          }\r\n          return consts.className.BUTTON + \" \" + icoCss.join(\"_\");\r\n        },\r\n        makeNodeIcoStyle: function(setting, node) {\r\n          var icoStyle = [];\r\n          if (!node.isAjaxing) {\r\n            var isParent = data.nodeIsParent(setting, node);\r\n            var icon =\r\n              isParent && node.iconOpen && node.iconClose\r\n                ? node.open\r\n                  ? node.iconOpen\r\n                  : node.iconClose\r\n                : node[setting.data.key.icon];\r\n            if (icon)\r\n              icoStyle.push(\"background:url(\", icon, \") 0 0 no-repeat;\");\r\n            if (\r\n              setting.view.showIcon == false ||\r\n              !tools.apply(setting.view.showIcon, [setting.treeId, node], true)\r\n            ) {\r\n              icoStyle.push(\"width:0px;height:0px;\");\r\n            }\r\n          }\r\n          return icoStyle.join(\"\");\r\n        },\r\n        makeNodeLineClass: function(setting, node) {\r\n          var lineClass = [];\r\n          if (setting.view.showLine) {\r\n            if (node.level == 0 && node.isFirstNode && node.isLastNode) {\r\n              lineClass.push(consts.line.ROOT);\r\n            } else if (node.level == 0 && node.isFirstNode) {\r\n              lineClass.push(consts.line.ROOTS);\r\n            } else if (node.isLastNode) {\r\n              lineClass.push(consts.line.BOTTOM);\r\n            } else {\r\n              lineClass.push(consts.line.CENTER);\r\n            }\r\n          } else {\r\n            lineClass.push(consts.line.NOLINE);\r\n          }\r\n          if (data.nodeIsParent(setting, node)) {\r\n            lineClass.push(\r\n              node.open ? consts.folder.OPEN : consts.folder.CLOSE\r\n            );\r\n          } else {\r\n            lineClass.push(consts.folder.DOCU);\r\n          }\r\n          return view.makeNodeLineClassEx(node) + lineClass.join(\"_\");\r\n        },\r\n        makeNodeLineClassEx: function(node) {\r\n          return (\r\n            consts.className.BUTTON +\r\n            \" \" +\r\n            consts.className.LEVEL +\r\n            node.level +\r\n            \" \" +\r\n            consts.className.SWITCH +\r\n            \" \"\r\n          );\r\n        },\r\n        makeNodeTarget: function(node) {\r\n          return node.target || \"_blank\";\r\n        },\r\n        makeNodeUrl: function(setting, node) {\r\n          var urlKey = setting.data.key.url;\r\n          return node[urlKey] ? node[urlKey] : null;\r\n        },\r\n        makeUlHtml: function(setting, node, html, content) {\r\n          html.push(\r\n            \"<ul id='\",\r\n            node.tId,\r\n            consts.id.UL,\r\n            \"' class='\",\r\n            consts.className.LEVEL,\r\n            node.level,\r\n            \" \",\r\n            view.makeUlLineClass(setting, node),\r\n            \"' style='display:\",\r\n            node.open ? \"block\" : \"none\",\r\n            \"'>\"\r\n          );\r\n          html.push(content);\r\n          html.push(\"</ul>\");\r\n        },\r\n        makeUlLineClass: function(setting, node) {\r\n          return setting.view.showLine && !node.isLastNode\r\n            ? consts.line.LINE\r\n            : \"\";\r\n        },\r\n        removeChildNodes: function(setting, node) {\r\n          if (!node) return;\r\n          var nodes = data.nodeChildren(setting, node);\r\n          if (!nodes) return;\r\n\r\n          for (var i = 0, l = nodes.length; i < l; i++) {\r\n            data.removeNodeCache(setting, nodes[i]);\r\n          }\r\n          data.removeSelectedNode(setting);\r\n          delete node[setting.data.key.children];\r\n\r\n          if (!setting.data.keep.parent) {\r\n            data.nodeIsParent(setting, node, false);\r\n            node.open = false;\r\n            var tmp_switchObj = $$(node, consts.id.SWITCH, setting),\r\n              tmp_icoObj = $$(node, consts.id.ICON, setting);\r\n            view.replaceSwitchClass(node, tmp_switchObj, consts.folder.DOCU);\r\n            view.replaceIcoClass(node, tmp_icoObj, consts.folder.DOCU);\r\n            $$(node, consts.id.UL, setting).remove();\r\n          } else {\r\n            $$(node, consts.id.UL, setting).empty();\r\n          }\r\n        },\r\n        scrollIntoView: function(setting, dom) {\r\n          if (!dom) {\r\n            return;\r\n          }\r\n          // support IE 7\r\n          if (typeof Element === \"undefined\") {\r\n            var contRect = setting.treeObj.get(0).getBoundingClientRect(),\r\n              findMeRect = dom.getBoundingClientRect();\r\n            if (\r\n              findMeRect.top < contRect.top ||\r\n              findMeRect.bottom > contRect.bottom ||\r\n              findMeRect.right > contRect.right ||\r\n              findMeRect.left < contRect.left\r\n            ) {\r\n              dom.scrollIntoView();\r\n            }\r\n            return;\r\n          }\r\n          // CC-BY jocki84@googlemail.com, https://gist.github.com/jocki84/6ffafd003387179a988e\r\n          if (!Element.prototype.scrollIntoViewIfNeeded) {\r\n            Element.prototype.scrollIntoViewIfNeeded = function(\r\n              centerIfNeeded\r\n            ) {\r\n              \"use strict\";\r\n\r\n              function makeRange(start, length) {\r\n                return { start: start, length: length, end: start + length };\r\n              }\r\n\r\n              function coverRange(inner, outer) {\r\n                if (\r\n                  false === centerIfNeeded ||\r\n                  (outer.start < inner.end && inner.start < outer.end)\r\n                ) {\r\n                  return Math.max(\r\n                    inner.end - outer.length,\r\n                    Math.min(outer.start, inner.start)\r\n                  );\r\n                }\r\n                return (inner.start + inner.end - outer.length) / 2;\r\n              }\r\n\r\n              function makePoint(x, y) {\r\n                return {\r\n                  x: x,\r\n                  y: y,\r\n                  translate: function translate(dX, dY) {\r\n                    return makePoint(x + dX, y + dY);\r\n                  }\r\n                };\r\n              }\r\n\r\n              function absolute(elem, pt) {\r\n                while (elem) {\r\n                  pt = pt.translate(elem.offsetLeft, elem.offsetTop);\r\n                  elem = elem.offsetParent;\r\n                }\r\n                return pt;\r\n              }\r\n\r\n              var target = absolute(this, makePoint(0, 0)),\r\n                extent = makePoint(this.offsetWidth, this.offsetHeight),\r\n                elem = this.parentNode,\r\n                origin;\r\n\r\n              while (elem instanceof HTMLElement) {\r\n                // Apply desired scroll amount.\r\n                origin = absolute(\r\n                  elem,\r\n                  makePoint(elem.clientLeft, elem.clientTop)\r\n                );\r\n                elem.scrollLeft = coverRange(\r\n                  makeRange(target.x - origin.x, extent.x),\r\n                  makeRange(elem.scrollLeft, elem.clientWidth)\r\n                );\r\n                elem.scrollTop = coverRange(\r\n                  makeRange(target.y - origin.y, extent.y),\r\n                  makeRange(elem.scrollTop, elem.clientHeight)\r\n                );\r\n\r\n                // Determine actual scroll amount by reading back scroll properties.\r\n                target = target.translate(-elem.scrollLeft, -elem.scrollTop);\r\n                elem = elem.parentNode;\r\n              }\r\n            };\r\n          }\r\n          dom.scrollIntoViewIfNeeded();\r\n        },\r\n        setFirstNode: function(setting, parentNode) {\r\n          var children = data.nodeChildren(setting, parentNode);\r\n          if (children.length > 0) {\r\n            children[0].isFirstNode = true;\r\n          }\r\n        },\r\n        setLastNode: function(setting, parentNode) {\r\n          var children = data.nodeChildren(setting, parentNode);\r\n          if (children.length > 0) {\r\n            children[children.length - 1].isLastNode = true;\r\n          }\r\n        },\r\n        removeNode: function(setting, node) {\r\n          var root = data.getRoot(setting),\r\n            parentNode = node.parentTId ? node.getParentNode() : root;\r\n\r\n          node.isFirstNode = false;\r\n          node.isLastNode = false;\r\n          node.getPreNode = function() {\r\n            return null;\r\n          };\r\n          node.getNextNode = function() {\r\n            return null;\r\n          };\r\n\r\n          if (!data.getNodeCache(setting, node.tId)) {\r\n            return;\r\n          }\r\n\r\n          $$(node, setting).remove();\r\n          data.removeNodeCache(setting, node);\r\n          data.removeSelectedNode(setting, node);\r\n\r\n          var children = data.nodeChildren(setting, parentNode);\r\n          for (var i = 0, l = children.length; i < l; i++) {\r\n            if (children[i].tId == node.tId) {\r\n              children.splice(i, 1);\r\n              break;\r\n            }\r\n          }\r\n          view.setFirstNode(setting, parentNode);\r\n          view.setLastNode(setting, parentNode);\r\n\r\n          var tmp_ulObj,\r\n            tmp_switchObj,\r\n            tmp_icoObj,\r\n            childLength = children.length;\r\n\r\n          //repair nodes old parent\r\n          if (!setting.data.keep.parent && childLength == 0) {\r\n            //old parentNode has no child nodes\r\n            data.nodeIsParent(setting, parentNode, false);\r\n            parentNode.open = false;\r\n            delete parentNode[setting.data.key.children];\r\n            tmp_ulObj = $$(parentNode, consts.id.UL, setting);\r\n            tmp_switchObj = $$(parentNode, consts.id.SWITCH, setting);\r\n            tmp_icoObj = $$(parentNode, consts.id.ICON, setting);\r\n            view.replaceSwitchClass(\r\n              parentNode,\r\n              tmp_switchObj,\r\n              consts.folder.DOCU\r\n            );\r\n            view.replaceIcoClass(parentNode, tmp_icoObj, consts.folder.DOCU);\r\n            tmp_ulObj.css(\"display\", \"none\");\r\n          } else if (setting.view.showLine && childLength > 0) {\r\n            //old parentNode has child nodes\r\n            var newLast = children[childLength - 1];\r\n            tmp_ulObj = $$(newLast, consts.id.UL, setting);\r\n            tmp_switchObj = $$(newLast, consts.id.SWITCH, setting);\r\n            tmp_icoObj = $$(newLast, consts.id.ICON, setting);\r\n            if (parentNode == root) {\r\n              if (children.length == 1) {\r\n                //node was root, and ztree has only one root after move node\r\n                view.replaceSwitchClass(\r\n                  newLast,\r\n                  tmp_switchObj,\r\n                  consts.line.ROOT\r\n                );\r\n              } else {\r\n                var tmp_first_switchObj = $$(\r\n                  children[0],\r\n                  consts.id.SWITCH,\r\n                  setting\r\n                );\r\n                view.replaceSwitchClass(\r\n                  children[0],\r\n                  tmp_first_switchObj,\r\n                  consts.line.ROOTS\r\n                );\r\n                view.replaceSwitchClass(\r\n                  newLast,\r\n                  tmp_switchObj,\r\n                  consts.line.BOTTOM\r\n                );\r\n              }\r\n            } else {\r\n              view.replaceSwitchClass(\r\n                newLast,\r\n                tmp_switchObj,\r\n                consts.line.BOTTOM\r\n              );\r\n            }\r\n            tmp_ulObj.removeClass(consts.line.LINE);\r\n          }\r\n        },\r\n        replaceIcoClass: function(node, obj, newName) {\r\n          if (!obj || node.isAjaxing) return;\r\n          var tmpName = obj.attr(\"class\");\r\n          if (tmpName == undefined) return;\r\n          var tmpList = tmpName.split(\"_\");\r\n          switch (newName) {\r\n            case consts.folder.OPEN:\r\n            case consts.folder.CLOSE:\r\n            case consts.folder.DOCU:\r\n              tmpList[tmpList.length - 1] = newName;\r\n              break;\r\n          }\r\n          obj.attr(\"class\", tmpList.join(\"_\"));\r\n        },\r\n        replaceSwitchClass: function(node, obj, newName) {\r\n          if (!obj) return;\r\n          var tmpName = obj.attr(\"class\");\r\n          if (tmpName == undefined) return;\r\n          var tmpList = tmpName.split(\"_\");\r\n          switch (newName) {\r\n            case consts.line.ROOT:\r\n            case consts.line.ROOTS:\r\n            case consts.line.CENTER:\r\n            case consts.line.BOTTOM:\r\n            case consts.line.NOLINE:\r\n              tmpList[0] = view.makeNodeLineClassEx(node) + newName;\r\n              break;\r\n            case consts.folder.OPEN:\r\n            case consts.folder.CLOSE:\r\n            case consts.folder.DOCU:\r\n              tmpList[1] = newName;\r\n              break;\r\n          }\r\n          obj.attr(\"class\", tmpList.join(\"_\"));\r\n          if (newName !== consts.folder.DOCU) {\r\n            obj.removeAttr(\"disabled\");\r\n          } else {\r\n            obj.attr(\"disabled\", \"disabled\");\r\n          }\r\n        },\r\n        selectNode: function(setting, node, addFlag) {\r\n          if (!addFlag) {\r\n            view.cancelPreSelectedNode(setting, null, node);\r\n          }\r\n          $$(node, consts.id.A, setting).addClass(consts.node.CURSELECTED);\r\n          data.addSelectedNode(setting, node);\r\n          setting.treeObj.trigger(consts.event.SELECTED, [\r\n            setting.treeId,\r\n            node\r\n          ]);\r\n        },\r\n        setNodeFontCss: function(setting, treeNode) {\r\n          var aObj = $$(treeNode, consts.id.A, setting),\r\n            fontCss = view.makeNodeFontCss(setting, treeNode);\r\n          if (fontCss) {\r\n            aObj.css(fontCss);\r\n          }\r\n        },\r\n        setNodeLineIcos: function(setting, node) {\r\n          if (!node) return;\r\n          var switchObj = $$(node, consts.id.SWITCH, setting),\r\n            ulObj = $$(node, consts.id.UL, setting),\r\n            icoObj = $$(node, consts.id.ICON, setting),\r\n            ulLine = view.makeUlLineClass(setting, node);\r\n          if (ulLine.length == 0) {\r\n            ulObj.removeClass(consts.line.LINE);\r\n          } else {\r\n            ulObj.addClass(ulLine);\r\n          }\r\n          switchObj.attr(\"class\", view.makeNodeLineClass(setting, node));\r\n          if (data.nodeIsParent(setting, node)) {\r\n            switchObj.removeAttr(\"disabled\");\r\n          } else {\r\n            switchObj.attr(\"disabled\", \"disabled\");\r\n          }\r\n          icoObj.removeAttr(\"style\");\r\n          icoObj.attr(\"style\", view.makeNodeIcoStyle(setting, node));\r\n          icoObj.attr(\"class\", view.makeNodeIcoClass(setting, node));\r\n        },\r\n        setNodeName: function(setting, node) {\r\n          var title = data.nodeTitle(setting, node),\r\n            nObj = $$(node, consts.id.SPAN, setting);\r\n          nObj.empty();\r\n          if (setting.view.nameIsHTML) {\r\n            nObj.html(data.nodeName(setting, node));\r\n          } else {\r\n            nObj.text(data.nodeName(setting, node));\r\n          }\r\n          if (\r\n            tools.apply(\r\n              setting.view.showTitle,\r\n              [setting.treeId, node],\r\n              setting.view.showTitle\r\n            )\r\n          ) {\r\n            var aObj = $$(node, consts.id.A, setting);\r\n            aObj.attr(\"title\", !title ? \"\" : title);\r\n          }\r\n        },\r\n        setNodeTarget: function(setting, node) {\r\n          var aObj = $$(node, consts.id.A, setting);\r\n          aObj.attr(\"target\", view.makeNodeTarget(node));\r\n        },\r\n        setNodeUrl: function(setting, node) {\r\n          var aObj = $$(node, consts.id.A, setting),\r\n            url = view.makeNodeUrl(setting, node);\r\n          if (url == null || url.length == 0) {\r\n            aObj.removeAttr(\"href\");\r\n          } else {\r\n            aObj.attr(\"href\", url);\r\n          }\r\n        },\r\n        switchNode: function(setting, node) {\r\n          if (node.open || !tools.canAsync(setting, node)) {\r\n            view.expandCollapseNode(setting, node, !node.open);\r\n          } else if (setting.async.enable) {\r\n            if (!view.asyncNode(setting, node)) {\r\n              view.expandCollapseNode(setting, node, !node.open);\r\n              return;\r\n            }\r\n          } else if (node) {\r\n            view.expandCollapseNode(setting, node, !node.open);\r\n          }\r\n        }\r\n      };\r\n    // zTree\r\n    exports_data = {\r\n      consts: _consts,\r\n      _z: {\r\n        tools: tools,\r\n        view: view,\r\n        event: event,\r\n        data: data\r\n      },\r\n      getZTreeObj: function(treeId) {\r\n        var o = data.getZTreeTools(treeId);\r\n        return o ? o : null;\r\n      },\r\n      destroy: function(treeId) {\r\n        if (!!treeId && treeId.length > 0) {\r\n          view.destroy(data.getSetting(treeId));\r\n        } else {\r\n          for (var s in settings) {\r\n            view.destroy(settings[s]);\r\n          }\r\n        }\r\n      },\r\n      init: function(obj, zSetting, zNodes) {\r\n        var setting = tools.clone(_setting);\r\n        $.extend(true, setting, zSetting);\r\n        setting.treeId = obj.attr(\"id\");\r\n        setting.treeObj = obj;\r\n        setting.treeObj.empty();\r\n        settings[setting.treeId] = setting;\r\n        //For some older browser,(e.g., ie6)\r\n        if (typeof document.body.style.maxHeight === \"undefined\") {\r\n          setting.view.expandSpeed = \"\";\r\n        }\r\n        data.initRoot(setting);\r\n        var root = data.getRoot(setting);\r\n        zNodes = zNodes\r\n          ? tools.clone(tools.isArray(zNodes) ? zNodes : [zNodes])\r\n          : [];\r\n        if (setting.data.simpleData.enable) {\r\n          data.nodeChildren(\r\n            setting,\r\n            root,\r\n            data.transformTozTreeFormat(setting, zNodes)\r\n          );\r\n        } else {\r\n          data.nodeChildren(setting, root, zNodes);\r\n        }\r\n\r\n        data.initCache(setting);\r\n        event.unbindTree(setting);\r\n        event.bindTree(setting);\r\n        event.unbindEvent(setting);\r\n        event.bindEvent(setting);\r\n\r\n        var zTreeTools = {\r\n          setting: setting,\r\n          addNodes: function(parentNode, index, newNodes, isSilent) {\r\n            if (!parentNode) parentNode = null;\r\n            var isParent = data.nodeIsParent(setting, parentNode);\r\n            if (parentNode && !isParent && setting.data.keep.leaf) return null;\r\n\r\n            var i = parseInt(index, 10);\r\n            if (isNaN(i)) {\r\n              isSilent = !!newNodes;\r\n              newNodes = index;\r\n              index = -1;\r\n            } else {\r\n              index = i;\r\n            }\r\n            if (!newNodes) return null;\r\n\r\n            var xNewNodes = tools.clone(\r\n              tools.isArray(newNodes) ? newNodes : [newNodes]\r\n            );\r\n\r\n            function addCallback() {\r\n              view.addNodes(\r\n                setting,\r\n                parentNode,\r\n                index,\r\n                xNewNodes,\r\n                isSilent == true\r\n              );\r\n            }\r\n\r\n            if (tools.canAsync(setting, parentNode)) {\r\n              view.asyncNode(setting, parentNode, isSilent, addCallback);\r\n            } else {\r\n              addCallback();\r\n            }\r\n            return xNewNodes;\r\n          },\r\n          cancelSelectedNode: function(node) {\r\n            view.cancelPreSelectedNode(setting, node);\r\n          },\r\n          destroy: function() {\r\n            view.destroy(setting);\r\n          },\r\n          expandAll: function(expandFlag) {\r\n            expandFlag = !!expandFlag;\r\n            view.expandCollapseSonNode(setting, null, expandFlag, true);\r\n            return expandFlag;\r\n          },\r\n          expandNode: function(node, expandFlag, sonSign, focus, callbackFlag) {\r\n            if (!node || !data.nodeIsParent(setting, node)) return null;\r\n            if (expandFlag !== true && expandFlag !== false) {\r\n              expandFlag = !node.open;\r\n            }\r\n            callbackFlag = !!callbackFlag;\r\n\r\n            if (\r\n              callbackFlag &&\r\n              expandFlag &&\r\n              tools.apply(\r\n                setting.callback.beforeExpand,\r\n                [setting.treeId, node],\r\n                true\r\n              ) == false\r\n            ) {\r\n              return null;\r\n            } else if (\r\n              callbackFlag &&\r\n              !expandFlag &&\r\n              tools.apply(\r\n                setting.callback.beforeCollapse,\r\n                [setting.treeId, node],\r\n                true\r\n              ) == false\r\n            ) {\r\n              return null;\r\n            }\r\n            if (expandFlag && node.parentTId) {\r\n              view.expandCollapseParentNode(\r\n                setting,\r\n                node.getParentNode(),\r\n                expandFlag,\r\n                false\r\n              );\r\n            }\r\n            if (expandFlag === node.open && !sonSign) {\r\n              return null;\r\n            }\r\n\r\n            data.getRoot(setting).expandTriggerFlag = callbackFlag;\r\n            if (!tools.canAsync(setting, node) && sonSign) {\r\n              view.expandCollapseSonNode(\r\n                setting,\r\n                node,\r\n                expandFlag,\r\n                true,\r\n                showNodeFocus\r\n              );\r\n            } else {\r\n              node.open = !expandFlag;\r\n              view.switchNode(this.setting, node);\r\n              showNodeFocus();\r\n            }\r\n            return expandFlag;\r\n\r\n            function showNodeFocus() {\r\n              var a = $$(node, setting).get(0);\r\n              if (a && focus !== false) {\r\n                view.scrollIntoView(setting, a);\r\n              }\r\n            }\r\n          },\r\n          getNodes: function() {\r\n            return data.getNodes(setting);\r\n          },\r\n          getNodeByParam: function(key, value, parentNode) {\r\n            if (!key) return null;\r\n            return data.getNodeByParam(\r\n              setting,\r\n              parentNode\r\n                ? data.nodeChildren(setting, parentNode)\r\n                : data.getNodes(setting),\r\n              key,\r\n              value\r\n            );\r\n          },\r\n          getNodeByTId: function(tId) {\r\n            return data.getNodeCache(setting, tId);\r\n          },\r\n          getNodesByParam: function(key, value, parentNode) {\r\n            if (!key) return null;\r\n            return data.getNodesByParam(\r\n              setting,\r\n              parentNode\r\n                ? data.nodeChildren(setting, parentNode)\r\n                : data.getNodes(setting),\r\n              key,\r\n              value\r\n            );\r\n          },\r\n          getNodesByParamFuzzy: function(key, value, parentNode) {\r\n            if (!key) return null;\r\n            return data.getNodesByParamFuzzy(\r\n              setting,\r\n              parentNode\r\n                ? data.nodeChildren(setting, parentNode)\r\n                : data.getNodes(setting),\r\n              key,\r\n              value\r\n            );\r\n          },\r\n          getNodesByFilter: function(\r\n            filter,\r\n            isSingle,\r\n            parentNode,\r\n            invokeParam\r\n          ) {\r\n            isSingle = !!isSingle;\r\n            if (!filter || typeof filter != \"function\")\r\n              return isSingle ? null : [];\r\n            return data.getNodesByFilter(\r\n              setting,\r\n              parentNode\r\n                ? data.nodeChildren(setting, parentNode)\r\n                : data.getNodes(setting),\r\n              filter,\r\n              isSingle,\r\n              invokeParam\r\n            );\r\n          },\r\n          getNodeIndex: function(node) {\r\n            if (!node) return null;\r\n            var parentNode = node.parentTId\r\n              ? node.getParentNode()\r\n              : data.getRoot(setting);\r\n            var children = data.nodeChildren(setting, parentNode);\r\n            for (var i = 0, l = children.length; i < l; i++) {\r\n              if (children[i] == node) return i;\r\n            }\r\n            return -1;\r\n          },\r\n          getSelectedNodes: function() {\r\n            var r = [],\r\n              list = data.getRoot(setting).curSelectedList;\r\n            for (var i = 0, l = list.length; i < l; i++) {\r\n              r.push(list[i]);\r\n            }\r\n            return r;\r\n          },\r\n          isSelectedNode: function(node) {\r\n            return data.isSelectedNode(setting, node);\r\n          },\r\n          reAsyncChildNodesPromise: function(parentNode, reloadType, isSilent) {\r\n            var promise = new Promise(function(resolve, reject) {\r\n              try {\r\n                zTreeTools.reAsyncChildNodes(\r\n                  parentNode,\r\n                  reloadType,\r\n                  isSilent,\r\n                  function() {\r\n                    resolve(parentNode);\r\n                  }\r\n                );\r\n              } catch (e) {\r\n                reject(e);\r\n              }\r\n            });\r\n            return promise;\r\n          },\r\n          reAsyncChildNodes: function(\r\n            parentNode,\r\n            reloadType,\r\n            isSilent,\r\n            callback\r\n          ) {\r\n            if (!this.setting.async.enable) return;\r\n            var isRoot = !parentNode;\r\n            if (isRoot) {\r\n              parentNode = data.getRoot(setting);\r\n            }\r\n            if (reloadType == \"refresh\") {\r\n              var children = data.nodeChildren(setting, parentNode);\r\n              for (var i = 0, l = children ? children.length : 0; i < l; i++) {\r\n                data.removeNodeCache(setting, children[i]);\r\n              }\r\n              data.removeSelectedNode(setting);\r\n              data.nodeChildren(setting, parentNode, []);\r\n              if (isRoot) {\r\n                this.setting.treeObj.empty();\r\n              } else {\r\n                var ulObj = $$(parentNode, consts.id.UL, setting);\r\n                ulObj.empty();\r\n              }\r\n            }\r\n            view.asyncNode(\r\n              this.setting,\r\n              isRoot ? null : parentNode,\r\n              !!isSilent,\r\n              callback\r\n            );\r\n          },\r\n          refresh: function() {\r\n            this.setting.treeObj.empty();\r\n            var root = data.getRoot(setting),\r\n              nodes = data.nodeChildren(setting, root);\r\n            data.initRoot(setting);\r\n            data.nodeChildren(setting, root, nodes);\r\n            data.initCache(setting);\r\n            view.createNodes(\r\n              setting,\r\n              0,\r\n              data.nodeChildren(setting, root),\r\n              null,\r\n              -1\r\n            );\r\n          },\r\n          removeChildNodes: function(node) {\r\n            if (!node) return null;\r\n            var nodes = data.nodeChildren(setting, node);\r\n            view.removeChildNodes(setting, node);\r\n            return nodes ? nodes : null;\r\n          },\r\n          removeNode: function(node, callbackFlag) {\r\n            if (!node) return;\r\n            callbackFlag = !!callbackFlag;\r\n            if (\r\n              callbackFlag &&\r\n              tools.apply(\r\n                setting.callback.beforeRemove,\r\n                [setting.treeId, node],\r\n                true\r\n              ) == false\r\n            )\r\n              return;\r\n            view.removeNode(setting, node);\r\n            if (callbackFlag) {\r\n              this.setting.treeObj.trigger(consts.event.REMOVE, [\r\n                setting.treeId,\r\n                node\r\n              ]);\r\n            }\r\n          },\r\n          selectNode: function(node, addFlag, isSilent) {\r\n            if (!node) return;\r\n            if (tools.uCanDo(setting)) {\r\n              addFlag = setting.view.selectedMulti && addFlag;\r\n              if (node.parentTId) {\r\n                view.expandCollapseParentNode(\r\n                  setting,\r\n                  node.getParentNode(),\r\n                  true,\r\n                  false,\r\n                  showNodeFocus\r\n                );\r\n              } else if (!isSilent) {\r\n                try {\r\n                  $$(node, setting)\r\n                    .focus()\r\n                    .blur();\r\n                } catch (e) {}\r\n              }\r\n              view.selectNode(setting, node, addFlag);\r\n            }\r\n\r\n            function showNodeFocus() {\r\n              if (isSilent) {\r\n                return;\r\n              }\r\n              var a = $$(node, setting).get(0);\r\n              view.scrollIntoView(setting, a);\r\n            }\r\n          },\r\n          transformTozTreeNodes: function(simpleNodes) {\r\n            return data.transformTozTreeFormat(setting, simpleNodes);\r\n          },\r\n          transformToArray: function(nodes) {\r\n            return data.transformToArrayFormat(setting, nodes);\r\n          },\r\n          updateNode: function(node, checkTypeFlag) {\r\n            if (!node) return;\r\n            var nObj = $$(node, setting);\r\n            if (nObj.get(0) && tools.uCanDo(setting)) {\r\n              view.setNodeName(setting, node);\r\n              view.setNodeTarget(setting, node);\r\n              view.setNodeUrl(setting, node);\r\n              view.setNodeLineIcos(setting, node);\r\n              view.setNodeFontCss(setting, node);\r\n            }\r\n          }\r\n        };\r\n        root.treeTools = zTreeTools;\r\n        data.setZTreeTools(setting, zTreeTools);\r\n        var children = data.nodeChildren(setting, root);\r\n        if (children && children.length > 0) {\r\n          view.createNodes(setting, 0, children, null, -1);\r\n        } else if (\r\n          setting.async.enable &&\r\n          setting.async.url &&\r\n          setting.async.url !== \"\"\r\n        ) {\r\n          view.asyncNode(setting);\r\n        }\r\n        return zTreeTools;\r\n      }\r\n    };\r\n\r\n    var zt = exports_data,\r\n      $$ = tools.$,\r\n      consts = zt.consts;\r\n  })(jQuery);\r\n\r\n  exports(model_name, exports_data);\r\n});\r\n"]}